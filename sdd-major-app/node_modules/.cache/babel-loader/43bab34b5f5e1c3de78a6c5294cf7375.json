{"ast":null,"code":"var _jsxFileName = \"/Users/dillon/projects/sdd-major/sdd-major-app/src/pages/WordlistCreator.js\";\nimport React, { useEffect } from 'react';\nimport { Paper, Button, Card, CardContent, IconButton, TextField, Dialog, DialogTitle, Input } from '@material-ui/core';\nimport image from '../public/theboard.png';\nimport AddIcon from '@material-ui/icons/Add';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Carousel from 'react-material-ui-carousel';\nimport { useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class WordlistCreator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userDetails: {\n        username: \"\",\n        email: \"\"\n      },\n      wordlistCode: \"\",\n      openWord: false,\n      wordToAdd: \"\",\n      definitionToAdd: \"\",\n      wordTranslationToAdd: \"\",\n      definitionTranslationToAdd: \"\",\n      words: [],\n      selectedWord: \"none\"\n    };\n  } // Adding user details pre render\n\n\n  componentWillMount() {\n    let uid = sessionStorage.getItem(\"uid\"); // this.setState({\n    //     wordlistCode: wordlistCode\n    // })\n\n    let wordlistCode = this.props.match.params.id;\n    this.setState({\n      wordlistCode: wordlistCode\n    }, () => {\n      // Gets the current words to display in a wordlist\n      this.getWords();\n    });\n    fetch('api/userbase/get_user_by_uid', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"uid\": uid\n      })\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        userDetails: data\n      });\n    });\n  } // Calls the addWord API Endpoint and then adds a given word\n  // to the current wordlist\n\n\n  addWord() {\n    let uid = sessionStorage.getItem(\"uid\");\n    let wordData = {\n      \"uid\": uid,\n      \"wordToAdd\": this.state.wordToAdd,\n      \"definitionToAdd\": this.state.definitionToAdd,\n      \"wordTranslationToAdd\": this.state.wordTranslationToAdd,\n      \"definitionTranslationToAdd\": this.state.definitionTranslationToAdd,\n      \"wordlistCode\": this.state.wordlistCode\n    };\n    fetch('/api/wordlist/add_word', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(wordData)\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        openWord: false\n      }, () => {\n        this.getWords();\n      });\n    });\n  }\n\n  getWords() {\n    let uid = sessionStorage.getItem(\"uid\");\n    let wordData = {\n      \"uid\": uid,\n      \"wordlistCode\": this.state.wordlistCode\n    };\n    fetch('/api/wordlist/get_words', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(wordData)\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        words: data[\"words\"]\n      });\n    });\n  } // Changes the selected word in the side panel\n\n\n  changeSelectedWord(selectedWordIndex) {\n    this.setState({\n      selectedWord: selectedWordIndex\n    }, () => {\n      console.log(this.state.selectedWord);\n    });\n  }\n\n  render() {\n    var items = [{\n      name: \"Random Name #1\",\n      description: \"Probably the most random thing you have ever seen!\"\n    }, {\n      name: \"Random Name #2\",\n      description: \"Hello World!\"\n    }];\n\n    if (this.state.accountType === \"student\") {// Return Student Dashboard\n    } else {\n      // Return Teacher Dashboard\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            paddingLeft: \"2%\"\n          },\n          children: \"10 IST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"2%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"inline-block\",\n              marginRight: \"40%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              style: {\n                width: \"400px\",\n                height: \"500px\",\n                borderRadius: \"10px\",\n                position: \"absolute\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"inline-block\",\n                  width: \"100%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    position: \"absolute\",\n                    paddingLeft: \"5%\",\n                    paddingTop: \"5%\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    style: {\n                      textAlign: \"left\"\n                    },\n                    children: \"Your Words\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                    style: {\n                      textAlign: \"left\",\n                      color: \"grey\",\n                      fontWeight: \"400\"\n                    },\n                    children: \"Jou woorde\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    paddingRight: \"5%\",\n                    paddingTop: \"12%\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"delete\",\n                    style: {\n                      backgroundColor: \"#FF7979\",\n                      float: \"right\"\n                    },\n                    onClick: () => this.setState({\n                      openWord: true\n                    }),\n                    children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                      style: {\n                        color: \"white\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"center\",\n                  paddingTop: \"10%\"\n                },\n                children: this.state.words.map(word => {\n                  // wordIndex refers to the index of the word within this.state.words\n                  // for selection\n                  // let wordIndex = this.state.words.findIndex(word)\n                  return /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      width: \"100%\",\n                      borderRadius: \"0\"\n                    },\n                    onClick: () => this.changeSelectedWord(wordIndex),\n                    children: word.word\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"inline-block\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              style: {\n                width: \"700px\",\n                height: \"500px\",\n                borderRadius: \"10px\",\n                position: \"absolute\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                style: {\n                  paddingLeft: \"5%\",\n                  paddingTop: \"5%\",\n                  textAlign: \"left\"\n                },\n                children: \"Vectors\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  paddingLeft: \"5%\",\n                  textAlign: \"left\",\n                  color: \"grey\",\n                  fontWeight: \"400\"\n                },\n                children: \"Vektore\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: image,\n                  style: {\n                    position: \"relative\",\n                    maxWidth: \"300px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  paddingLeft: \"5%\",\n                  paddingTop: \"1%\",\n                  textAlign: \"left\"\n                },\n                children: \"Lopsem ipsum\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          fullScreen: true,\n          open: this.state.openWord,\n          onClose: () => this.setState({\n            openWord: false\n          }),\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            children: \"Add Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: \"5%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 0,\n              style: {\n                textAlign: \"center\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Word in English\",\n                variant: \"outlined\",\n                style: {\n                  marginTop: \"20px\",\n                  width: \"80%\"\n                },\n                onChange: e => this.setState({\n                  wordToAdd: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Definition in English\",\n                variant: \"outlined\",\n                style: {\n                  marginTop: \"20px\",\n                  width: \"80%\"\n                },\n                onChange: e => this.setState({\n                  definitionToAdd: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Word in Alternate Language\",\n                variant: \"outlined\",\n                style: {\n                  marginTop: \"20px\",\n                  width: \"80%\"\n                },\n                onChange: e => this.setState({\n                  wordTranslationToAdd: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Definition in Alternate Language\",\n                variant: \"outlined\",\n                style: {\n                  marginTop: \"20px\",\n                  width: \"80%\"\n                },\n                onChange: e => this.setState({\n                  definitionTranslationToAdd: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                component: \"label\",\n                children: [\"Upload Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  hidden: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  variant: \"filled\",\n                  onClick: () => this.addWord(),\n                  children: \"Add Word\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/dillon/projects/sdd-major/sdd-major-app/src/pages/WordlistCreator.js"],"names":["React","useEffect","Paper","Button","Card","CardContent","IconButton","TextField","Dialog","DialogTitle","Input","image","AddIcon","CreateIcon","Carousel","useParams","WordlistCreator","Component","constructor","props","state","userDetails","username","email","wordlistCode","openWord","wordToAdd","definitionToAdd","wordTranslationToAdd","definitionTranslationToAdd","words","selectedWord","componentWillMount","uid","sessionStorage","getItem","match","params","id","setState","getWords","fetch","method","headers","body","JSON","stringify","then","response","json","data","addWord","wordData","changeSelectedWord","selectedWordIndex","console","log","render","items","name","description","accountType","paddingLeft","marginLeft","display","marginRight","width","height","borderRadius","position","paddingTop","textAlign","color","fontWeight","paddingRight","backgroundColor","float","map","word","wordIndex","maxWidth","marginTop","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Paper, Button, Card, CardContent, IconButton, TextField, Dialog, DialogTitle, Input } from '@material-ui/core'\nimport image from '../public/theboard.png'\nimport AddIcon from '@material-ui/icons/Add';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Carousel from 'react-material-ui-carousel'\nimport { useParams } from 'react-router';\n\nexport default class WordlistCreator extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userDetails: {\n                username: \"\",\n                email: \"\"\n            },\n            wordlistCode: \"\",\n            openWord: false,\n            wordToAdd: \"\",\n            definitionToAdd: \"\",\n            wordTranslationToAdd: \"\",\n            definitionTranslationToAdd: \"\",\n            words: [],\n            selectedWord: \"none\"\n        }\n    }\n\n    // Adding user details pre render\n    componentWillMount() {\n        let uid = sessionStorage.getItem(\"uid\");\n        // this.setState({\n        //     wordlistCode: wordlistCode\n        // })\n\n        let wordlistCode = this.props.match.params.id;\n        this.setState({\n            wordlistCode: wordlistCode\n        }, () => {\n            // Gets the current words to display in a wordlist\n            this.getWords()\n        })\n\n        fetch('api/userbase/get_user_by_uid', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify({\"uid\": uid})\n          })\n          .then(response => response.json())\n          .then(data => {\n              this.setState({userDetails: data})\n        })\n    }\n\n    // Calls the addWord API Endpoint and then adds a given word\n    // to the current wordlist\n    addWord() {\n        let uid = sessionStorage.getItem(\"uid\");\n\n        let wordData = {\n            \"uid\": uid,\n            \"wordToAdd\": this.state.wordToAdd,\n            \"definitionToAdd\": this.state.definitionToAdd,\n            \"wordTranslationToAdd\": this.state.wordTranslationToAdd,\n            \"definitionTranslationToAdd\": this.state.definitionTranslationToAdd,\n            \"wordlistCode\": this.state.wordlistCode\n        }\n\n        fetch('/api/wordlist/add_word', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify(wordData)\n          })\n          .then(response => response.json())\n          .then(data => {\n            this.setState({\n                openWord: false\n            }, () => {\n                this.getWords();\n            })\n        })\n    }\n\n    getWords() {\n        let uid = sessionStorage.getItem(\"uid\");\n\n        let wordData = {\n            \"uid\": uid,\n            \"wordlistCode\": this.state.wordlistCode\n        }\n\n        fetch('/api/wordlist/get_words', {\n            method: 'post',\n            headers: {\n                'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify(wordData)\n            })\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    words: data[\"words\"]\n                })\n        }) \n    }\n\n    // Changes the selected word in the side panel\n    changeSelectedWord(selectedWordIndex) {\n        this.setState({\n            selectedWord: selectedWordIndex\n        }, () => {\n            console.log(this.state.selectedWord)\n        })\n    }\n\n    render() {\n        var items = [\n            {\n                name: \"Random Name #1\",\n                description: \"Probably the most random thing you have ever seen!\"\n            },\n            {\n                name: \"Random Name #2\",\n                description: \"Hello World!\"\n            }\n        ]\n\n        if (this.state.accountType === \"student\") {\n            // Return Student Dashboard\n        } else {\n            // Return Teacher Dashboard\n            return (\n                <div>\n                    <h1 style={{paddingLeft: \"2%\"}}>10 IST</h1>\n                    <div style={{marginLeft: \"2%\"}}>\n                        <div style={{display: \"inline-block\", marginRight: \"40%\"}}>\n                            <Paper elevation={3} style={{width: \"400px\", height: \"500px\", borderRadius: \"10px\", position: \"absolute\"}}>\n                                <div style={{display: \"inline-block\", width: \"100%\"}}>\n                                    <div style={{position: \"absolute\", paddingLeft: \"5%\", paddingTop: \"5%\",}}>\n                                        <h2 style={{textAlign: \"left\"}}>Your Words</h2>\n                                        <h3 style={{textAlign: \"left\", color: \"grey\", fontWeight: \"400\"}}>Jou woorde</h3>\n                                    </div>\n                                    <div style={{paddingRight: \"5%\", paddingTop: \"12%\"}}>\n                                        <IconButton aria-label=\"delete\" style={{backgroundColor: \"#FF7979\", float: \"right\"}} onClick={() => this.setState({openWord: true})}>\n                                            <AddIcon style={{color: \"white\"}}/>\n                                        </IconButton> \n                                    </div>\n                                </div>\n                                <div style={{textAlign: \"center\", paddingTop: \"10%\"}}>\n                                    {\n                                        this.state.words.map((word) => {\n                                            // wordIndex refers to the index of the word within this.state.words\n                                            // for selection\n                                            // let wordIndex = this.state.words.findIndex(word)\n                                            return (\n                                                <Button style={{width: \"100%\", borderRadius: \"0\"}} onClick={() => this.changeSelectedWord(wordIndex)}>{word.word}</Button> \n                                            )\n                                        })\n                                    }\n                                </div>\n                            </Paper>\n                        </div>\n                        <div style={{display: \"inline-block\"}}>\n                            <Paper elevation={3} style={{width: \"700px\", height: \"500px\", borderRadius: \"10px\", position: \"absolute\"}}>\n                                <h2 style={{paddingLeft: \"5%\", paddingTop: \"5%\", textAlign: \"left\"}}>Vectors</h2>\n                                <h3 style={{paddingLeft: \"5%\", textAlign: \"left\", color: \"grey\", fontWeight: \"400\"}}>Vektore</h3>\n                                <div style={{textAlign: \"center\"}}>\n                                    <img src={image} style={{position: \"relative\", maxWidth: \"300px\"}}></img>\n                                </div>\n                                <br></br>\n                                <p style={{paddingLeft: \"5%\", paddingTop: \"1%\", textAlign: \"left\"}}>Lopsem ipsum</p>\n                            </Paper>\n                        </div>\n                    </div>\n                    <Dialog fullScreen open={this.state.openWord} onClose={() => this.setState({openWord: false})}>\n                        <DialogTitle>Add Word</DialogTitle>\n                        <div style={{marginLeft: \"5%\"}}>\n                            <Paper elevation={0} style={{textAlign: \"center\"}}>\n                                <TextField label=\"Word in English\" variant=\"outlined\" style={{marginTop: \"20px\", width: \"80%\"}} onChange={(e) => this.setState({wordToAdd: e.target.value})}></TextField>\n                                <br></br>\n                                <TextField label=\"Definition in English\" variant=\"outlined\" style={{marginTop: \"20px\", width: \"80%\"}} onChange={(e) => this.setState({definitionToAdd: e.target.value})}></TextField>\n                                <br></br>\n                                <TextField label=\"Word in Alternate Language\" variant=\"outlined\" style={{marginTop: \"20px\", width: \"80%\"}} onChange={(e) => this.setState({wordTranslationToAdd: e.target.value})}></TextField>\n                                <br></br>\n                                <TextField label=\"Definition in Alternate Language\" variant=\"outlined\" style={{marginTop: \"20px\", width: \"80%\"}} onChange={(e) => this.setState({definitionTranslationToAdd: e.target.value})}></TextField>\n                                <br></br>\n                                <Button variant=\"contained\" component=\"label\">\n                                    Upload Image\n                                    <input type=\"file\" hidden/>\n                                </Button>\n                                <br></br>\n                                <div style={{textAlign: \"center\"}}>\n                                    <Button color=\"primary\" variant=\"filled\" onClick={() => this.addWord()}>Add Word</Button>\n                                </div>\n                            </Paper>\n                        </div>\n                    </Dialog>\n                </div>\n            )\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}