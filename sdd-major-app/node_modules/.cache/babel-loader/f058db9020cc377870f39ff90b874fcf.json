{"ast":null,"code":"var _jsxFileName = \"/Users/dillon/projects/sdd-major/sdd-major-app/src/pages/Dashboard.js\";\nimport React, { useEffect } from 'react';\nimport { Input, Tooltip, Button, IconButton, TextField, Dialog, Zoom, DialogTitle, Paper } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport CreateIcon from '@material-ui/icons/Create';\nimport shortid from 'shortid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userDetails: {\n        username: \"\",\n        email: \"\"\n      },\n      existingWordlists: {},\n      openCreateWordlist: false,\n      wordlistName: \"\",\n      wordlistDescription: \"\"\n    };\n    this.createWordlist = this.createWordlist.bind(this);\n    this.getWordlists = this.getWordlists.bind(this);\n  } // Adding user details pre render\n\n\n  componentWillMount() {\n    let uid = sessionStorage.getItem(\"uid\");\n    fetch('http://sddmajordev:5000/api/userbase/get_user_by_uid', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"uid\": uid\n      })\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        userDetails: data\n      });\n    });\n    this.getWordlists();\n  }\n\n  getWordlists() {\n    let uid = sessionStorage.getItem(\"uid\");\n    console.log(uid);\n    fetch('http://sddmajordev:5000/api/wordlist/get_all_wordlists', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"uid\": uid\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      this.setState({\n        existingWordlists: data.wordlists\n      });\n    });\n  } // Create Wordlist\n\n\n  createWordlist() {\n    console.log(this.state);\n    let uid = sessionStorage.getItem(\"uid\");\n    let wordlistCode = shortid.generate();\n    let wordlistData = {\n      wordlistName: this.state.wordlistName,\n      wordlistDescription: this.state.wordlistDescription,\n      wordlistCode: wordlistCode,\n      uid: uid\n    };\n    fetch('http://sddmajordev:5000/api/wordlist/create_wordlist', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(wordlistData)\n    }).then(response => response.json()).then(data => {\n      window.location = `/edit/${wordlistCode}`;\n    });\n  }\n\n  render() {\n    var items = [{\n      name: \"Random Name #1\",\n      description: \"Probably the most random thing you have ever seen!\"\n    }, {\n      name: \"Random Name #2\",\n      description: \"Hello World!\"\n    }];\n\n    if (this.state.accountType === \"student\") {// Return Student Dashboard\n    } else {\n      // Return Teacher Dashboard\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflow: \"hidden\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Add Student\",\n          TransitionComponent: Zoom,\n          arrow: true,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"delete\",\n            style: {\n              backgroundColor: \"#FF7979\",\n              float: \"right\"\n            },\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {\n              style: {\n                color: \"white\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Create New Wordlist\",\n          TransitionComponent: Zoom,\n          arrow: true,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"delete\",\n            style: {\n              backgroundColor: \"#FF7979\",\n              float: \"right\"\n            },\n            onClick: () => this.setState({\n              openCreateWordlist: true\n            }),\n            children: /*#__PURE__*/_jsxDEV(CreateIcon, {\n              style: {\n                color: \"white\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [\"Hello, \", this.state.userDetails.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            style: {\n              width: \"950px\",\n              height: \"100%\",\n              margin: \"0\",\n              float: \"right\"\n            },\n            elevation: 3,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                margin: \"3%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Your Wordlists\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Search Wordlist\",\n                variant: \"outlined\",\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Paper, {\n                style: {\n                  width: \"800px\",\n                  minHeight: \"100vh\",\n                  marginTop: \"1%\"\n                },\n                elevation: 5,\n                children: Object.keys(this.state.existingWordlists).map(wordlistCode => {\n                  let wordlistData = this.state.existingWordlists[wordlistCode];\n                  return /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: wordlistData.wordlist_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 45\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: this.state.openCreateWordlist,\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            children: \"New Wordlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: \"5%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 0,\n              style: {\n                height: \"150px\",\n                width: \"500px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Wordlist Name\",\n                onChange: e => this.setState({\n                  wordlistName: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Description\",\n                style: {\n                  marginTop: \"20px\",\n                  width: \"200px\"\n                },\n                onChange: e => this.setState({\n                  wordlistDescription: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  variant: \"filled\",\n                  onClick: this.createWordlist,\n                  children: \"Go\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/dillon/projects/sdd-major/sdd-major-app/src/pages/Dashboard.js"],"names":["React","useEffect","Input","Tooltip","Button","IconButton","TextField","Dialog","Zoom","DialogTitle","Paper","AddIcon","CreateIcon","shortid","Dashboard","Component","constructor","props","state","userDetails","username","email","existingWordlists","openCreateWordlist","wordlistName","wordlistDescription","createWordlist","bind","getWordlists","componentWillMount","uid","sessionStorage","getItem","fetch","method","headers","body","JSON","stringify","then","response","json","data","setState","console","log","wordlists","wordlistCode","generate","wordlistData","window","location","render","items","name","description","accountType","overflow","backgroundColor","float","color","textAlign","width","height","margin","minHeight","marginTop","Object","keys","map","wordlist_name","marginLeft","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,MAAzB,EAAiCC,UAAjC,EAA6CC,SAA7C,EAAwDC,MAAxD,EAAgEC,IAAhE,EAAsEC,WAAtE,EAAmFC,KAAnF,QAAgG,mBAAhG;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAEA,eAAe,MAAMC,SAAN,SAAwBd,KAAK,CAACe,SAA9B,CAAwC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AACTC,QAAAA,QAAQ,EAAE,EADD;AAETC,QAAAA,KAAK,EAAE;AAFE,OADJ;AAKTC,MAAAA,iBAAiB,EAAE,EALV;AAMTC,MAAAA,kBAAkB,EAAE,KANX;AAOTC,MAAAA,YAAY,EAAE,EAPL;AAQTC,MAAAA,mBAAmB,EAAE;AARZ,KAAb;AAWA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH,GAjBkD,CAmBnD;;;AACAE,EAAAA,kBAAkB,GAAG;AACjB,QAAIC,GAAG,GAAGC,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAV;AACAC,IAAAA,KAAK,CAAC,sDAAD,EAAyD;AAC1DC,MAAAA,MAAM,EAAE,MADkD;AAE1DC,MAAAA,OAAO,EAAE;AACP,wBAAiB;AADV,OAFiD;AAK1DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,eAAOR;AAAR,OAAf;AALoD,KAAzD,CAAL,CAOGS,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPpB,EAQGF,IARH,CAQQG,IAAI,IAAI;AACV,WAAKC,QAAL,CAAc;AAACxB,QAAAA,WAAW,EAAEuB;AAAd,OAAd;AACL,KAVD;AAWA,SAAKd,YAAL;AACH;;AAEDA,EAAAA,YAAY,GAAG;AACX,QAAIE,GAAG,GAAGC,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAV;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYf,GAAZ;AACAG,IAAAA,KAAK,CAAC,wDAAD,EAA2D;AAC5DC,MAAAA,MAAM,EAAE,MADoD;AAE5DC,MAAAA,OAAO,EAAE;AACP,wBAAiB;AADV,OAFmD;AAK5DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,eAAOR;AAAR,OAAf;AALsD,KAA3D,CAAL,CAOGS,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPpB,EAQGF,IARH,CAQQG,IAAI,IAAI;AACVE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAKC,QAAL,CAAc;AACVrB,QAAAA,iBAAiB,EAAEoB,IAAI,CAACI;AADd,OAAd;AAGL,KAbD;AAcH,GArDkD,CAuDnD;;;AACApB,EAAAA,cAAc,GAAG;AACbkB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAjB;AACA,QAAIY,GAAG,GAAGC,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAV;AACA,QAAIe,YAAY,GAAGlC,OAAO,CAACmC,QAAR,EAAnB;AACA,QAAIC,YAAY,GAAG;AACfzB,MAAAA,YAAY,EAAE,KAAKN,KAAL,CAAWM,YADV;AAEfC,MAAAA,mBAAmB,EAAE,KAAKP,KAAL,CAAWO,mBAFjB;AAGfsB,MAAAA,YAAY,EAAEA,YAHC;AAIfjB,MAAAA,GAAG,EAAEA;AAJU,KAAnB;AAOAG,IAAAA,KAAK,CAAC,sDAAD,EAAyD;AAC1DC,MAAAA,MAAM,EAAE,MADkD;AAE1DC,MAAAA,OAAO,EAAE;AACP,wBAAiB;AADV,OAFiD;AAK1DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeW,YAAf;AALoD,KAAzD,CAAL,CAOGV,IAPH,CAOQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPpB,EAQGF,IARH,CAQQG,IAAI,IAAI;AACVQ,MAAAA,MAAM,CAACC,QAAP,GAAmB,SAAQJ,YAAa,EAAxC;AACL,KAVD;AAWH;;AAEDK,EAAAA,MAAM,GAAG;AACL,QAAIC,KAAK,GAAG,CACR;AACIC,MAAAA,IAAI,EAAE,gBADV;AAEIC,MAAAA,WAAW,EAAE;AAFjB,KADQ,EAKR;AACID,MAAAA,IAAI,EAAE,gBADV;AAEIC,MAAAA,WAAW,EAAE;AAFjB,KALQ,CAAZ;;AAWA,QAAI,KAAKrC,KAAL,CAAWsC,WAAX,KAA2B,SAA/B,EAA0C,CACtC;AACH,KAFD,MAEO;AACH;AACA,0BACI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAZ;AAAA,gCACI,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,aAAf;AAA6B,UAAA,mBAAmB,EAAEjD,IAAlD;AAAwD,UAAA,KAAK,MAA7D;AAAA,iCACI,QAAC,UAAD;AAAY,0BAAW,QAAvB;AAAgC,YAAA,KAAK,EAAE;AAACkD,cAAAA,eAAe,EAAE,SAAlB;AAA6BC,cAAAA,KAAK,EAAE;AAApC,aAAvC;AAAA,mCACI,QAAC,OAAD;AAAS,cAAA,KAAK,EAAE;AAACC,gBAAAA,KAAK,EAAE;AAAR;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,qBAAf;AAAqC,UAAA,mBAAmB,EAAEpD,IAA1D;AAAgE,UAAA,KAAK,MAArE;AAAA,iCACI,QAAC,UAAD;AAAY,0BAAW,QAAvB;AAAgC,YAAA,KAAK,EAAE;AAACkD,cAAAA,eAAe,EAAE,SAAlB;AAA6BC,cAAAA,KAAK,EAAE;AAApC,aAAvC;AAAqF,YAAA,OAAO,EAAE,MAAM,KAAKhB,QAAL,CAAc;AAACpB,cAAAA,kBAAkB,EAAE;AAArB,aAAd,CAApG;AAAA,mCACI,QAAC,UAAD;AAAY,cAAA,KAAK,EAAE;AAACqC,gBAAAA,KAAK,EAAE;AAAR;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBANJ,eAWI;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAE;AAAZ,WAAX;AAAA,gCAA0C,KAAK3C,KAAL,CAAWC,WAAX,CAAuBC,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAYI;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAaI;AAAA,iCACI,QAAC,KAAD;AAAO,YAAA,KAAK,EAAE;AAAC0C,cAAAA,KAAK,EAAE,OAAR;AAAiBC,cAAAA,MAAM,EAAE,MAAzB;AAAiCC,cAAAA,MAAM,EAAE,GAAzC;AAA8CL,cAAAA,KAAK,EAAE;AAArD,aAAd;AAA6E,YAAA,SAAS,EAAE,CAAxF;AAAA,mCACI;AAAK,cAAA,KAAK,EAAE;AAACK,gBAAAA,MAAM,EAAE;AAAT,eAAZ;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,iBAAjB;AAAmC,gBAAA,OAAO,EAAC,UAA3C;AAAsD,gBAAA,IAAI,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,QAAC,KAAD;AAAO,gBAAA,KAAK,EAAE;AAACF,kBAAAA,KAAK,EAAE,OAAR;AAAiBG,kBAAAA,SAAS,EAAE,OAA5B;AAAqCC,kBAAAA,SAAS,EAAE;AAAhD,iBAAd;AAAqE,gBAAA,SAAS,EAAE,CAAhF;AAAA,0BAEIC,MAAM,CAACC,IAAP,CAAY,KAAKlD,KAAL,CAAWI,iBAAvB,EAA0C+C,GAA1C,CAA+CtB,YAAD,IAAkB;AAC5D,sBAAIE,YAAY,GAAG,KAAK/B,KAAL,CAAWI,iBAAX,CAA6ByB,YAA7B,CAAnB;AACA,sCACI;AAAA,8BAAKE,YAAY,CAACqB;AAAlB;AAAA;AAAA;AAAA;AAAA,0BADJ;AAGH,iBALD;AAFJ;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAbJ,eA+BI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAE,KAAKpD,KAAL,CAAWK,kBAAzB;AAAA,kCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,KAAK,EAAE;AAACgD,cAAAA,UAAU,EAAE;AAAb,aAAZ;AAAA,mCACI,QAAC,KAAD;AAAO,cAAA,SAAS,EAAE,CAAlB;AAAqB,cAAA,KAAK,EAAE;AAACR,gBAAAA,MAAM,EAAE,OAAT;AAAkBD,gBAAAA,KAAK,EAAE;AAAzB,eAA5B;AAAA,sCACI,QAAC,KAAD;AAAO,gBAAA,WAAW,EAAC,eAAnB;AAAmC,gBAAA,QAAQ,EAAGU,CAAD,IAAO,KAAK7B,QAAL,CAAc;AAACnB,kBAAAA,YAAY,EAAEgD,CAAC,CAACC,MAAF,CAASC;AAAxB,iBAAd;AAApD;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,aAAjB;AAA+B,gBAAA,KAAK,EAAE;AAACR,kBAAAA,SAAS,EAAE,MAAZ;AAAoBJ,kBAAAA,KAAK,EAAE;AAA3B,iBAAtC;AAA2E,gBAAA,QAAQ,EAAGU,CAAD,IAAO,KAAK7B,QAAL,CAAc;AAAClB,kBAAAA,mBAAmB,EAAE+C,CAAC,CAACC,MAAF,CAASC;AAA/B,iBAAd;AAA5F;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAK,gBAAA,KAAK,EAAE;AAACb,kBAAAA,SAAS,EAAE;AAAZ,iBAAZ;AAAA,uCACI,QAAC,MAAD;AAAQ,kBAAA,KAAK,EAAC,SAAd;AAAwB,kBAAA,OAAO,EAAC,QAAhC;AAAyC,kBAAA,OAAO,EAAE,KAAKnC,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAgDH;AACJ;;AAjJkD","sourcesContent":["import React, { useEffect } from 'react'\nimport { Input, Tooltip, Button, IconButton, TextField, Dialog, Zoom, DialogTitle, Paper } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\nimport CreateIcon from '@material-ui/icons/Create';\nimport shortid from 'shortid'\n\nexport default class Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userDetails: {\n                username: \"\",\n                email: \"\"\n            },\n            existingWordlists: {},\n            openCreateWordlist: false,\n            wordlistName: \"\",\n            wordlistDescription: \"\"\n        }\n\n        this.createWordlist = this.createWordlist.bind(this);\n        this.getWordlists = this.getWordlists.bind(this);\n    }\n\n    // Adding user details pre render\n    componentWillMount() {\n        let uid = sessionStorage.getItem(\"uid\");\n        fetch('http://sddmajordev:5000/api/userbase/get_user_by_uid', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify({\"uid\": uid})\n          })\n          .then(response => response.json())\n          .then(data => {\n              this.setState({userDetails: data})\n        })\n        this.getWordlists();\n    }\n\n    getWordlists() {\n        let uid = sessionStorage.getItem(\"uid\");\n        console.log(uid)\n        fetch('http://sddmajordev:5000/api/wordlist/get_all_wordlists', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify({\"uid\": uid})\n          })\n          .then(response => response.json())\n          .then(data => {\n              console.log(data)\n              this.setState({\n                  existingWordlists: data.wordlists\n              })\n        })\n    }\n\n    // Create Wordlist\n    createWordlist() {\n        console.log(this.state)\n        let uid = sessionStorage.getItem(\"uid\");\n        let wordlistCode = shortid.generate()\n        let wordlistData = {\n            wordlistName: this.state.wordlistName,\n            wordlistDescription: this.state.wordlistDescription,\n            wordlistCode: wordlistCode,\n            uid: uid\n        }\n\n        fetch('http://sddmajordev:5000/api/wordlist/create_wordlist', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify(wordlistData)\n          })\n          .then(response => response.json())\n          .then(data => {\n              window.location = `/edit/${wordlistCode}`\n        }) \n    }\n\n    render() {\n        var items = [\n            {\n                name: \"Random Name #1\",\n                description: \"Probably the most random thing you have ever seen!\"\n            },\n            {\n                name: \"Random Name #2\",\n                description: \"Hello World!\"\n            }\n        ]\n\n        if (this.state.accountType === \"student\") {\n            // Return Student Dashboard\n        } else {\n            // Return Teacher Dashboard\n            return (\n                <div style={{overflow: \"hidden\"}}>\n                    <Tooltip title=\"Add Student\" TransitionComponent={Zoom} arrow>\n                        <IconButton aria-label=\"delete\" style={{backgroundColor: \"#FF7979\", float: \"right\"}}>\n                            <AddIcon style={{color: \"white\"}}/>\n                        </IconButton> \n                    </Tooltip>\n                    <Tooltip title=\"Create New Wordlist\" TransitionComponent={Zoom} arrow>\n                        <IconButton aria-label=\"delete\" style={{backgroundColor: \"#FF7979\", float: \"right\"}} onClick={() => this.setState({openCreateWordlist: true})}>\n                            <CreateIcon style={{color: \"white\"}}/>\n                        </IconButton> \n                    </Tooltip>\n                    <h1 style={{textAlign: \"center\"}}>Hello, {this.state.userDetails.username}</h1>\n                    <br></br>\n                    <div>\n                        <Paper style={{width: \"950px\", height: \"100%\", margin: \"0\", float: \"right\"}} elevation={3}>\n                            <div style={{margin: \"3%\"}}>\n                                <h1>Your Wordlists</h1>\n                                <TextField label=\"Search Wordlist\" variant=\"outlined\" size=\"small\"></TextField>\n                                <Paper style={{width: \"800px\", minHeight: \"100vh\", marginTop: \"1%\"}} elevation={5}>\n                                {\n                                    Object.keys(this.state.existingWordlists).map((wordlistCode) => {\n                                        let wordlistData = this.state.existingWordlists[wordlistCode]\n                                        return (\n                                            <h1>{wordlistData.wordlist_name}</h1>\n                                        )\n                                    })\n                                }\n                                </Paper>\n                            </div>\n                        </Paper>\n                    </div>\n                    <Dialog open={this.state.openCreateWordlist}>\n                        <DialogTitle>New Wordlist</DialogTitle>\n                        <div style={{marginLeft: \"5%\"}}>\n                            <Paper elevation={0} style={{height: \"150px\", width: \"500px\"}}>\n                                <Input placeholder=\"Wordlist Name\" onChange={(e) => this.setState({wordlistName: e.target.value})}></Input>\n                                <br></br>\n                                <TextField label=\"Description\" style={{marginTop: \"20px\", width: \"200px\"}} onChange={(e) => this.setState({wordlistDescription: e.target.value})}></TextField>\n                                <br></br>\n                                <div style={{textAlign: \"center\"}}>\n                                    <Button color=\"primary\" variant=\"filled\" onClick={this.createWordlist}>Go</Button>\n                                </div>\n                            </Paper>\n                        </div>\n                    </Dialog>\n                </div>\n            )\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}