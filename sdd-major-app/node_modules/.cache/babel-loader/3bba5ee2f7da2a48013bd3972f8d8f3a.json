{"ast":null,"code":"var _jsxFileName = \"/Users/dillon/projects/sdd-major/sdd-major-app/src/pages/Dashboard.js\";\nimport React, { useEffect } from 'react';\nimport { Input, Tooltip, Button, IconButton, TextField, Dialog, Zoom, DialogTitle, Paper } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport CreateIcon from '@material-ui/icons/Create';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userDetails: {\n        username: \"\",\n        email: \"\"\n      },\n      openCreateWordlist: false,\n      wordlistName: \"\",\n      wordlistDescription: \"\"\n    };\n  } // Adding user details pre render\n\n\n  componentWillMount() {\n    let uid = sessionStorage.getItem(\"uid\");\n    fetch('http://sddmajordev:5000/api/userbase/get_user_by_uid', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"uid\": uid\n      })\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        userDetails: data\n      });\n    });\n  } // Create Wordlist\n\n\n  createWordlist() {}\n\n  render() {\n    var items = [{\n      name: \"Random Name #1\",\n      description: \"Probably the most random thing you have ever seen!\"\n    }, {\n      name: \"Random Name #2\",\n      description: \"Hello World!\"\n    }];\n\n    if (this.state.accountType === \"student\") {// Return Student Dashboard\n    } else {\n      // Return Teacher Dashboard\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Add Student\",\n          TransitionComponent: Zoom,\n          arrow: true,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"delete\",\n            style: {\n              backgroundColor: \"#FF7979\",\n              float: \"right\"\n            },\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {\n              style: {\n                color: \"white\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Create New Wordlist\",\n          TransitionComponent: Zoom,\n          arrow: true,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"delete\",\n            style: {\n              backgroundColor: \"#FF7979\",\n              float: \"right\"\n            },\n            onClick: () => this.setState({\n              openCreateWordlist: true\n            }),\n            children: /*#__PURE__*/_jsxDEV(CreateIcon, {\n              style: {\n                color: \"white\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [\"Hello, \", this.state.userDetails.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search Wordlist\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: this.state.openCreateWordlist,\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            children: \"New Wordlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: \"5%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 0,\n              style: {\n                height: \"150px\",\n                width: \"500px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"Wordlist Name\",\n                onChange: e => this.setState({\n                  wordlistName: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Description\",\n                style: {\n                  marginTop: \"20px\",\n                  width: \"200px\"\n                },\n                onChange: e => this.setState({\n                  wordlistDescription: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  variant: \"filled\",\n                  onClick: this.createWordlist,\n                  children: \"Go\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/dillon/projects/sdd-major/sdd-major-app/src/pages/Dashboard.js"],"names":["React","useEffect","Input","Tooltip","Button","IconButton","TextField","Dialog","Zoom","DialogTitle","Paper","AddIcon","CreateIcon","Dashboard","Component","constructor","props","state","userDetails","username","email","openCreateWordlist","wordlistName","wordlistDescription","componentWillMount","uid","sessionStorage","getItem","fetch","method","headers","body","JSON","stringify","then","response","json","data","setState","createWordlist","render","items","name","description","accountType","backgroundColor","float","color","textAlign","marginLeft","height","width","e","target","value","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Input, Tooltip, Button, IconButton, TextField, Dialog, Zoom, DialogTitle, Paper } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\nimport CreateIcon from '@material-ui/icons/Create';\n\nexport default class Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userDetails: {\n                username: \"\",\n                email: \"\"\n            },\n            openCreateWordlist: false,\n            wordlistName: \"\",\n            wordlistDescription: \"\"\n        }\n    }\n\n    // Adding user details pre render\n    componentWillMount() {\n        let uid = sessionStorage.getItem(\"uid\");\n        fetch('http://sddmajordev:5000/api/userbase/get_user_by_uid', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify({\"uid\": uid})\n          })\n          .then(response => response.json())\n          .then(data => {\n              this.setState({userDetails: data})\n        })\n    }\n\n    // Create Wordlist\n    createWordlist() {\n\n    }\n    \n    render() {\n        var items = [\n            {\n                name: \"Random Name #1\",\n                description: \"Probably the most random thing you have ever seen!\"\n            },\n            {\n                name: \"Random Name #2\",\n                description: \"Hello World!\"\n            }\n        ]\n\n        if (this.state.accountType === \"student\") {\n            // Return Student Dashboard\n        } else {\n            // Return Teacher Dashboard\n            return (\n                <div>\n                    <Tooltip title=\"Add Student\" TransitionComponent={Zoom} arrow>\n                        <IconButton aria-label=\"delete\" style={{backgroundColor: \"#FF7979\", float: \"right\"}}>\n                            <AddIcon style={{color: \"white\"}}/>\n                        </IconButton> \n                    </Tooltip>\n                    <Tooltip title=\"Create New Wordlist\" TransitionComponent={Zoom} arrow>\n                        <IconButton aria-label=\"delete\" style={{backgroundColor: \"#FF7979\", float: \"right\"}} onClick={() => this.setState({openCreateWordlist: true})}>\n                            <CreateIcon style={{color: \"white\"}}/>\n                        </IconButton> \n                    </Tooltip>\n                    <h1 style={{textAlign: \"center\"}}>Hello, {this.state.userDetails.username}</h1>\n                    <TextField label=\"Search Wordlist\" variant=\"outlined\"></TextField>\n                    <Dialog open={this.state.openCreateWordlist}>\n                        <DialogTitle>New Wordlist</DialogTitle>\n                        <div style={{marginLeft: \"5%\"}}>\n                            <Paper elevation={0} style={{height: \"150px\", width: \"500px\"}}>\n                                <Input placeholder=\"Wordlist Name\" onChange={(e) => this.setState({wordlistName: e.target.value})}></Input>\n                                <br></br>\n                                <TextField label=\"Description\" style={{marginTop: \"20px\", width: \"200px\"}} onChange={(e) => this.setState({wordlistDescription: e.target.value})}></TextField>\n                                <br></br>\n                                <div style={{textAlign: \"center\"}}>\n                                    <Button color=\"primary\" variant=\"filled\" onClick={this.createWordlist}>Go</Button>\n                                </div>\n                            </Paper>\n                        </div>\n                    </Dialog>\n                </div>\n            )\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}