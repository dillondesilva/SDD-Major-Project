[{"/Users/dillon/projects/sdd-major/sdd-major-app/src/reportWebVitals.js":"1","/Users/dillon/projects/sdd-major/sdd-major-app/src/App.js":"2","/Users/dillon/projects/sdd-major/sdd-major-app/src/index.js":"3","/Users/dillon/projects/sdd-major/sdd-major-app/src/pages/Home.js":"4","/Users/dillon/projects/sdd-major/sdd-major-app/src/pages/Login.js":"5","/Users/dillon/projects/sdd-major/sdd-major-app/src/components/HomeAppBar.js":"6","/Users/dillon/projects/sdd-major/sdd-major-app/src/pages/Register.js":"7","/Users/dillon/projects/sdd-major/sdd-major-app/src/pages/Dashboard.js":"8","/Users/dillon/projects/sdd-major/sdd-major-app/src/pages/WordlistCreator.js":"9"},{"size":362,"mtime":1612162335286,"results":"10","hashOfConfig":"11"},{"size":757,"mtime":1615811707752,"results":"12","hashOfConfig":"11"},{"size":500,"mtime":1612162335284,"results":"13","hashOfConfig":"11"},{"size":788,"mtime":1614899075648,"results":"14","hashOfConfig":"11"},{"size":1997,"mtime":1616153630464,"results":"15","hashOfConfig":"11"},{"size":1224,"mtime":1615503809529,"results":"16","hashOfConfig":"11"},{"size":3583,"mtime":1616153640703,"results":"17","hashOfConfig":"11"},{"size":6470,"mtime":1616051299667,"results":"18","hashOfConfig":"11"},{"size":8590,"mtime":1616153661024,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1462unq",{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"/Users/dillon/projects/sdd-major/sdd-major-app/src/reportWebVitals.js",[],"/Users/dillon/projects/sdd-major/sdd-major-app/src/App.js",["45","46"],"import './App.css';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Dashboard from './pages/Dashboard';\nimport WordlistCreator from './pages/WordlistCreator';\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\">\n        <Home/>\n      </Route>\n      <Route path=\"/login\">\n        <Login/>\n      </Route>\n      <Route path=\"/register\">\n        <Register/>\n      </Route>\n      <Route path=\"/dashboard\">\n        <Dashboard />\n      </Route>\n      <Route path=\"/edit/:id\" component={WordlistCreator}>\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/dillon/projects/sdd-major/sdd-major-app/src/index.js",[],"/Users/dillon/projects/sdd-major/sdd-major-app/src/pages/Home.js",["47","48","49","50","51","52"],"import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppBar, Typography } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport HomeAppBar from '../components/HomeAppBar'\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiAppBar: {\n      colorPrimary: {\n        backgroundColor: '#FFA474',\n      },\n    },\n  },\n  palette: {\n    primary: {\n      main: \"#ffa474\",\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n\nexport default class Home extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <HomeAppBar/>\n        </header>\n      </div>\n    ); \n  }\n}","/Users/dillon/projects/sdd-major/sdd-major-app/src/pages/Login.js",["53","54","55"],"import React, { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { TextField, Button } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport HomeAppBar from '../components/HomeAppBar'\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiAppBar: {\n      colorPrimary: {\n        backgroundColor: '#FFA474',\n      },\n    },\n    MuiTextField: {\n      colorPrimary: {\n        backgroundColor: '#FFA474',\n      },\n    },\n  },\n  palette: {\n    primary: {\n      main: \"#ffa474\",\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // State\n    this.state = {\n      emailValue: \"\",\n      pwdValue: \"\"\n    };\n\n    // Refs\n    this.email = React.createRef();\n    this.pwd = React.createRef();\n  }\n\n  loginUser() {\n    fetch('/api/userbase/verify_user', {\n      method: 'post',\n      headers: {\n        'Content-Type':  'application/json',\n      }, \n      body: JSON.stringify(this.state)\n    })\n    .then(response => response.json())\n    .then(data => {\n      sessionStorage.setItem(\"access_token\", data.access_token)\n      sessionStorage.setItem(\"uid\", data.uid)\n      window.location = \"/dashboard\";\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <HomeAppBar></HomeAppBar>\n        </header>\n        <div>\n          <ThemeProvider theme={theme}>\n              <TextField label=\"Email\" color=\"primary\" variant=\"outlined\" onChange={(e) => this.setState({emailValue: e.target.value})}/>\n              <br></br>\n              <TextField label=\"Password\" color=\"primary\" variant=\"outlined\" onChange={(e) => this.setState({pwdValue: e.target.value})}/>\n              <Button onClick={() => this.loginUser()}>Go</Button>\n          </ThemeProvider>\n        </div>\n      </div>\n    ); \n  }\n}","/Users/dillon/projects/sdd-major/sdd-major-app/src/components/HomeAppBar.js",["56","57"],"import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppBar, Typography } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiAppBar: {\n      colorPrimary: {\n        backgroundColor: '#FFA474',\n      },\n    },\n  },\n  palette: {\n    primary: {\n      main: \"#ffa474\",\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n\nexport default class HomeAppBar extends React.Component {\n  render() {\n    return (\n      <div>\n          <ThemeProvider theme={theme}>\n            <AppBar color='primary' theme={theme}>\n              <div style={{display: \"inline-block\"}}>\n                <h3 style={{marginRight: \"100px\", display: \"inline-block\", textDecoration: \"none\"}}>\n                  <Link to=\"/login\" style={{textDecoration: \"none\"}}>Sign In</Link>\n                </h3> \n                <h3 style={{marginRight: \"100px\", display: \"inline-block\"}}>\n                  <Link to=\"/register\">Register</Link>\n                </h3> \n              </div>\n            </AppBar>\n          </ThemeProvider>\n      </div>\n    ); \n  }\n}","/Users/dillon/projects/sdd-major/sdd-major-app/src/pages/Register.js",["58","59"],"import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TextField, Button, Radio, RadioGroup, FormControl, FormControlLabel, FormLabel } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport HomeAppBar from '../components/HomeAppBar'\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiAppBar: {\n      colorPrimary: {\n        backgroundColor: '#FFA474',\n      },\n    },\n    MuiTextField: {\n      colorPrimary: {\n        backgroundColor: '#FFA474',\n      },\n    },\n  },\n  palette: {\n    primary: {\n      main: \"#ffa474\",\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n\nexport default class Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // State\n    this.state = {\n      emailValue: \"\",\n      usernameValue: \"\",\n      pwdValue: \"\",\n      pwdConfirmValue: \"\",\n      accountType: \"\"\n    };\n\n    // Refs\n    this.email = React.createRef();\n    this.pwd = React.createRef();\n    this.pwdConfirm = React.createRef();\n  }\n\n  testConnectionToLocalServer() {\n    return fetch(\"https://sddmajordev:5000/test\")\n    .then(response => response.json())\n    .then(data => {\n      console.log('Success:', data);\n    })\n    .catch((err) => {\n        console.log(err);\n    });\n  }\n\n  // useEffect(() => {\n  //   testConnectionToLocalServer();\n  // }, []);\n  registerUser() {\n    fetch('/api/userbase/create_user', {\n      method: 'post',\n      headers: {\n        'Content-Type':  'application/json',\n      }, \n      body: JSON.stringify(this.state)\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('Success:', data);\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <HomeAppBar></HomeAppBar>\n          </header>\n          <div>\n            <ThemeProvider theme={theme}>\n                  <TextField value={this.state.emailValue} label=\"Email\" color=\"primary\" variant=\"outlined\" \n                  onChange={(e) => this.setState({emailValue: e.target.value})}/>\n                  <br></br>\n                  <TextField label=\"Username\" color=\"primary\" variant=\"outlined\" \n                  onChange={(e) => this.setState({usernameValue: e.target.value})}/>\n                  <br></br>\n                  <TextField label=\"Password\" color=\"primary\" variant=\"outlined\"\n                  onChange={(e) => this.setState({pwdValue: e.target.value})}/>\n                  <br></br>\n                  <TextField label=\"Confirm Password\" color=\"primary\" variant=\"outlined\"\n                  onChange={(e) => this.setState({pwdConfirmValue: e.target.value})}/>\n                  <br></br>\n                  <br></br>\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">I am a</FormLabel>\n                    <RadioGroup aria-label=\"gender\" name=\"gender1\" style={{display: \"inline\"}} value={this.state.accountType}\n                    onChange={(e) => this.setState({accountType: e.target.value})}>\n                      <FormControlLabel value=\"student\" control={<Radio />} label=\"Student\" />\n                      <FormControlLabel value=\"teacher\" control={<Radio />} label=\"Teacher\" />\n                    </RadioGroup>\n                  </FormControl>\n                  <br></br>\n                  <Button onClick={() => this.registerUser()}>Go</Button>\n              </ThemeProvider>  \n          </div>\n        </div>\n      </div>\n    ); \n  }\n}","/Users/dillon/projects/sdd-major/sdd-major-app/src/pages/Dashboard.js",["60","61"],"import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Input, Tooltip, Button, IconButton, TextField, Dialog, Zoom, DialogTitle, Paper } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\nimport CreateIcon from '@material-ui/icons/Create';\nimport shortid from 'shortid'\n\nexport default class Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userDetails: {\n                username: \"\",\n                email: \"\"\n            },\n            existingWordlists: {},\n            openCreateWordlist: false,\n            wordlistName: \"\",\n            wordlistDescription: \"\"\n        }\n\n        this.createWordlist = this.createWordlist.bind(this);\n        this.getWordlists = this.getWordlists.bind(this);\n    }\n\n    // Adding user details pre render\n    componentWillMount() {\n        let uid = sessionStorage.getItem(\"uid\");\n        fetch('http://sddmajordev:5000/api/userbase/get_user_by_uid', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify({\"uid\": uid})\n          })\n          .then(response => response.json())\n          .then(data => {\n              this.setState({userDetails: data})\n        })\n        this.getWordlists();\n    }\n\n    getWordlists() {\n        let uid = sessionStorage.getItem(\"uid\");\n        console.log(uid)\n        fetch('http://sddmajordev:5000/api/wordlist/get_all_wordlists', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify({\"uid\": uid})\n          })\n          .then(response => response.json())\n          .then(data => {\n              console.log(data)\n              this.setState({\n                  existingWordlists: data.wordlists\n              })\n        })\n    }\n\n    // Create Wordlist\n    createWordlist() {\n        console.log(this.state)\n        let uid = sessionStorage.getItem(\"uid\");\n        let wordlistCode = shortid.generate()\n        let wordlistData = {\n            wordlistName: this.state.wordlistName,\n            wordlistDescription: this.state.wordlistDescription,\n            wordlistCode: wordlistCode,\n            uid: uid\n        }\n\n        fetch('http://sddmajordev:5000/api/wordlist/create_wordlist', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify(wordlistData)\n          })\n          .then(response => response.json())\n          .then(data => {\n              window.location = `/edit/${wordlistCode}`\n        }) \n    }\n\n    render() {\n        var items = [\n            {\n                name: \"Random Name #1\",\n                description: \"Probably the most random thing you have ever seen!\"\n            },\n            {\n                name: \"Random Name #2\",\n                description: \"Hello World!\"\n            }\n        ]\n\n        if (this.state.accountType === \"student\") {\n            // Return Student Dashboard\n        } else {\n            // Return Teacher Dashboard\n            return (\n                <div style={{overflow: \"hidden\"}}>\n                    <Tooltip title=\"Add Student\" TransitionComponent={Zoom} arrow>\n                        <IconButton aria-label=\"delete\" style={{backgroundColor: \"#FF7979\", float: \"right\"}}>\n                            <AddIcon style={{color: \"white\"}}/>\n                        </IconButton> \n                    </Tooltip>\n                    <Tooltip title=\"Create New Wordlist\" TransitionComponent={Zoom} arrow>\n                        <IconButton aria-label=\"delete\" style={{backgroundColor: \"#FF7979\", float: \"right\"}} onClick={() => this.setState({openCreateWordlist: true})}>\n                            <CreateIcon style={{color: \"white\"}}/>\n                        </IconButton> \n                    </Tooltip>\n                    <h1 style={{textAlign: \"center\"}}>Hello, {this.state.userDetails.username}</h1>\n                    <br></br>\n                    <div>\n                        <Paper style={{width: \"950px\", height: \"100%\", margin: \"0\", float: \"right\"}} elevation={3}>\n                            <div style={{margin: \"3%\"}}>\n                                <h1>Your Wordlists</h1>\n                                <TextField label=\"Search Wordlist\" variant=\"outlined\" size=\"small\"></TextField>\n                                <Paper style={{width: \"800px\", minHeight: \"100vh\", marginTop: \"1%\"}} elevation={5}>\n                                {\n                                    Object.keys(this.state.existingWordlists).map((wordlistCode) => {\n                                        let wordlistData = this.state.existingWordlists[wordlistCode]\n                                        return (\n                                            <div>\n                                                <Link to={`/edit/${wordlistCode}`}>{wordlistData.wordlist_name}</Link>\n                                                <br></br>\n                                            </div>\n                                        )\n                                    })\n                                }\n                                </Paper>\n                            </div>\n                        </Paper>\n                    </div>\n                    <Dialog open={this.state.openCreateWordlist}>\n                        <DialogTitle>New Wordlist</DialogTitle>\n                        <div style={{marginLeft: \"5%\"}}>\n                            <Paper elevation={0} style={{height: \"150px\", width: \"500px\"}}>\n                                <Input placeholder=\"Wordlist Name\" onChange={(e) => this.setState({wordlistName: e.target.value})}></Input>\n                                <br></br>\n                                <TextField label=\"Description\" style={{marginTop: \"20px\", width: \"200px\"}} onChange={(e) => this.setState({wordlistDescription: e.target.value})}></TextField>\n                                <br></br>\n                                <div style={{textAlign: \"center\"}}>\n                                    <Button color=\"primary\" variant=\"filled\" onClick={this.createWordlist}>Go</Button>\n                                </div>\n                            </Paper>\n                        </div>\n                    </Dialog>\n                </div>\n            )\n        }\n    }\n}","/Users/dillon/projects/sdd-major/sdd-major-app/src/pages/WordlistCreator.js",["62","63","64","65","66","67","68","69","70"],"import React, { useEffect } from 'react'\nimport { Paper, Button, Card, CardContent, IconButton, TextField, Dialog, DialogTitle, Input } from '@material-ui/core'\nimport image from '../public/theboard.png'\nimport AddIcon from '@material-ui/icons/Add';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Carousel from 'react-material-ui-carousel'\nimport { useParams } from 'react-router';\n\nexport default class WordlistCreator extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userDetails: {\n                username: \"\",\n                email: \"\"\n            },\n            wordlistCode: \"\",\n            openWord: false,\n            wordToAdd: \"\",\n            definitionToAdd: \"\",\n            wordTranslationToAdd: \"\",\n            definitionTranslationToAdd: \"\",\n            words: [],\n            selectedWord: \"none\"\n        }\n    }\n\n    // Adding user details pre render\n    componentWillMount() {\n        let uid = sessionStorage.getItem(\"uid\");\n        // this.setState({\n        //     wordlistCode: wordlistCode\n        // })\n\n        let wordlistCode = this.props.match.params.id;\n        this.setState({\n            wordlistCode: wordlistCode\n        }, () => {\n            // Gets the current words to display in a wordlist\n            this.getWords()\n        })\n\n        fetch('http://sddmajordev:5000/api/userbase/get_user_by_uid', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify({\"uid\": uid})\n          })\n          .then(response => response.json())\n          .then(data => {\n              this.setState({userDetails: data})\n        })\n    }\n\n    // Calls the addWord API Endpoint and then adds a given word\n    // to the current wordlist\n    addWord() {\n        let uid = sessionStorage.getItem(\"uid\");\n\n        let wordData = {\n            \"uid\": uid,\n            \"wordToAdd\": this.state.wordToAdd,\n            \"definitionToAdd\": this.state.definitionToAdd,\n            \"wordTranslationToAdd\": this.state.wordTranslationToAdd,\n            \"definitionTranslationToAdd\": this.state.definitionTranslationToAdd,\n            \"wordlistCode\": this.state.wordlistCode\n        }\n\n        fetch('/api/wordlist/add_word', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify(wordData)\n          })\n          .then(response => response.json())\n          .then(data => {\n            this.setState({\n                openWord: false\n            }, () => {\n                this.getWords();\n            })\n        })\n    }\n\n    getWords() {\n        let uid = sessionStorage.getItem(\"uid\");\n\n        let wordData = {\n            \"uid\": uid,\n            \"wordlistCode\": this.state.wordlistCode\n        }\n\n        fetch('/api/wordlist/get_words', {\n            method: 'post',\n            headers: {\n                'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify(wordData)\n            })\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    words: data[\"words\"]\n                })\n        }) \n    }\n\n    render() {\n        var items = [\n            {\n                name: \"Random Name #1\",\n                description: \"Probably the most random thing you have ever seen!\"\n            },\n            {\n                name: \"Random Name #2\",\n                description: \"Hello World!\"\n            }\n        ]\n\n        if (this.state.accountType === \"student\") {\n            // Return Student Dashboard\n        } else {\n            // Return Teacher Dashboard\n            return (\n                <div>\n                    <h1 style={{paddingLeft: \"2%\"}}>10 IST</h1>\n                    <div style={{marginLeft: \"2%\"}}>\n                        <div style={{display: \"inline-block\", marginRight: \"40%\"}}>\n                            <Paper elevation={3} style={{width: \"400px\", height: \"500px\", borderRadius: \"10px\", position: \"absolute\"}}>\n                                <div style={{display: \"inline-block\", width: \"100%\"}}>\n                                    <div style={{position: \"absolute\", paddingLeft: \"5%\", paddingTop: \"5%\",}}>\n                                        <h2 style={{textAlign: \"left\"}}>Your Words</h2>\n                                        <h3 style={{textAlign: \"left\", color: \"grey\", fontWeight: \"400\"}}>Jou woorde</h3>\n                                    </div>\n                                    <div style={{paddingRight: \"5%\", paddingTop: \"12%\"}}>\n                                        <IconButton aria-label=\"delete\" style={{backgroundColor: \"#FF7979\", float: \"right\"}} onClick={() => this.setState({openWord: true})}>\n                                            <AddIcon style={{color: \"white\"}}/>\n                                        </IconButton> \n                                    </div>\n                                </div>\n                                <div style={{textAlign: \"center\", paddingTop: \"10%\"}}>\n                                    {\n                                        this.state.words.map((word) => {\n                                            return (\n                                                <Button style={{width: \"100%\", borderRadius: \"0\"}}>{word.word}</Button> \n                                            )\n                                        })\n                                    }\n                                </div>\n                            </Paper>\n                        </div>\n                        <div style={{display: \"inline-block\"}}>\n                            <Paper elevation={3} style={{width: \"700px\", height: \"500px\", borderRadius: \"10px\", position: \"absolute\"}}>\n                                <h2 style={{paddingLeft: \"5%\", paddingTop: \"5%\", textAlign: \"left\"}}>Vectors</h2>\n                                <h3 style={{paddingLeft: \"5%\", textAlign: \"left\", color: \"grey\", fontWeight: \"400\"}}>Vektore</h3>\n                                <div style={{textAlign: \"center\"}}>\n                                    <img src={image} style={{position: \"relative\", maxWidth: \"300px\"}}></img>\n                                </div>\n                                <br></br>\n                                <p style={{paddingLeft: \"5%\", paddingTop: \"1%\", textAlign: \"left\"}}>Lopsem ipsum</p>\n                            </Paper>\n                        </div>\n                    </div>\n                    <Dialog fullScreen open={this.state.openWord} onClose={() => this.setState({openWord: false})}>\n                        <DialogTitle>Add Word</DialogTitle>\n                        <div style={{marginLeft: \"5%\"}}>\n                            <Paper elevation={0} style={{textAlign: \"center\"}}>\n                                <TextField label=\"Word in English\" variant=\"outlined\" style={{marginTop: \"20px\", width: \"80%\"}} onChange={(e) => this.setState({wordToAdd: e.target.value})}></TextField>\n                                <br></br>\n                                <TextField label=\"Definition in English\" variant=\"outlined\" style={{marginTop: \"20px\", width: \"80%\"}} onChange={(e) => this.setState({definitionToAdd: e.target.value})}></TextField>\n                                <br></br>\n                                <TextField label=\"Word in Alternate Language\" variant=\"outlined\" style={{marginTop: \"20px\", width: \"80%\"}} onChange={(e) => this.setState({wordTranslationToAdd: e.target.value})}></TextField>\n                                <br></br>\n                                <TextField label=\"Definition in Alternate Language\" variant=\"outlined\" style={{marginTop: \"20px\", width: \"80%\"}} onChange={(e) => this.setState({definitionTranslationToAdd: e.target.value})}></TextField>\n                                <br></br>\n                                <Button variant=\"contained\" component=\"label\">\n                                    Upload Image\n                                    <input type=\"file\" hidden/>\n                                </Button>\n                                <br></br>\n                                <div style={{textAlign: \"center\"}}>\n                                    <Button color=\"primary\" variant=\"filled\" onClick={() => this.addWord()}>Add Word</Button>\n                                </div>\n                            </Paper>\n                        </div>\n                    </Dialog>\n                </div>\n            )\n        }\n    }\n}",{"ruleId":"71","severity":1,"message":"72","line":5,"column":3,"nodeType":"73","messageId":"74","endLine":5,"endColumn":9},{"ruleId":"71","severity":1,"message":"75","line":7,"column":3,"nodeType":"73","messageId":"74","endLine":7,"endColumn":7},{"ruleId":"71","severity":1,"message":"76","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"71","severity":1,"message":"75","line":2,"column":10,"nodeType":"73","messageId":"74","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"77","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":16},{"ruleId":"71","severity":1,"message":"78","line":3,"column":18,"nodeType":"73","messageId":"74","endLine":3,"endColumn":28},{"ruleId":"71","severity":1,"message":"79","line":4,"column":10,"nodeType":"73","messageId":"74","endLine":4,"endColumn":23},{"ruleId":"71","severity":1,"message":"80","line":8,"column":7,"nodeType":"73","messageId":"74","endLine":8,"endColumn":12},{"ruleId":"71","severity":1,"message":"76","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"71","severity":1,"message":"75","line":2,"column":10,"nodeType":"73","messageId":"74","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"81","line":2,"column":16,"nodeType":"73","messageId":"74","endLine":2,"endColumn":26},{"ruleId":"71","severity":1,"message":"76","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"71","severity":1,"message":"78","line":3,"column":18,"nodeType":"73","messageId":"74","endLine":3,"endColumn":28},{"ruleId":"71","severity":1,"message":"76","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"71","severity":1,"message":"75","line":2,"column":10,"nodeType":"73","messageId":"74","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"76","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"71","severity":1,"message":"82","line":89,"column":13,"nodeType":"73","messageId":"74","endLine":89,"endColumn":18},{"ruleId":"71","severity":1,"message":"76","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"71","severity":1,"message":"83","line":2,"column":25,"nodeType":"73","messageId":"74","endLine":2,"endColumn":29},{"ruleId":"71","severity":1,"message":"84","line":2,"column":31,"nodeType":"73","messageId":"74","endLine":2,"endColumn":42},{"ruleId":"71","severity":1,"message":"85","line":2,"column":88,"nodeType":"73","messageId":"74","endLine":2,"endColumn":93},{"ruleId":"71","severity":1,"message":"86","line":5,"column":8,"nodeType":"73","messageId":"74","endLine":5,"endColumn":18},{"ruleId":"71","severity":1,"message":"87","line":6,"column":8,"nodeType":"73","messageId":"74","endLine":6,"endColumn":16},{"ruleId":"71","severity":1,"message":"88","line":7,"column":10,"nodeType":"73","messageId":"74","endLine":7,"endColumn":19},{"ruleId":"71","severity":1,"message":"82","line":112,"column":13,"nodeType":"73","messageId":"74","endLine":112,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":160,"column":37,"nodeType":"91","endLine":160,"endColumn":104},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useEffect' is defined but never used.","'AppBar' is defined but never used.","'Typography' is defined but never used.","'ThemeProvider' is defined but never used.","'theme' is assigned a value but never used.","'useHistory' is defined but never used.","'items' is assigned a value but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Input' is defined but never used.","'CreateIcon' is defined but never used.","'Carousel' is defined but never used.","'useParams' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]