{"version":3,"sources":["components/HomeAppBar.js","pages/Home.js","pages/Login.js","pages/Register.js","pages/Dashboard.js","public/theboard.png","pages/WordlistCreator.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","overrides","MuiAppBar","colorPrimary","backgroundColor","palette","primary","main","secondary","green","HomeAppBar","ThemeProvider","AppBar","color","style","display","marginRight","textDecoration","to","React","Component","Home","className","MuiTextField","Login","props","state","emailValue","pwdValue","email","createRef","pwd","fetch","method","headers","body","JSON","stringify","this","then","response","json","data","sessionStorage","setItem","access_token","uid","window","location","TextField","label","variant","onChange","e","setState","target","value","Button","onClick","loginUser","Register","usernameValue","pwdConfirmValue","accountType","pwdConfirm","console","log","catch","err","FormControl","component","FormLabel","RadioGroup","aria-label","name","FormControlLabel","control","Radio","registerUser","Dashboard","userDetails","username","existingWordlists","openCreateWordlist","wordlistName","wordlistDescription","createWordlist","bind","getWordlists","getItem","wordlists","wordlistCode","shortid","generate","wordlistData","overflow","Tooltip","title","TransitionComponent","Zoom","arrow","IconButton","float","textAlign","Paper","width","height","margin","elevation","size","minHeight","marginTop","Object","keys","map","wordlist_name","Dialog","open","DialogTitle","marginLeft","Input","placeholder","WordlistCreator","openWord","wordToAdd","definitionToAdd","wordTranslationToAdd","definitionTranslationToAdd","words","selectedWord","match","params","id","getWords","wordData","paddingLeft","borderRadius","position","paddingTop","fontWeight","paddingRight","word","src","image","maxWidth","fullScreen","onClose","type","hidden","addWord","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7ed0f73.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppBar, Typography } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiAppBar: {\n      colorPrimary: {\n        backgroundColor: '#FFA474',\n      },\n    },\n  },\n  palette: {\n    primary: {\n      main: \"#ffa474\",\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n\nexport default class HomeAppBar extends React.Component {\n  render() {\n    return (\n      <div>\n          <ThemeProvider theme={theme}>\n            <AppBar color='primary' theme={theme}>\n              <div style={{display: \"inline-block\"}}>\n                <h3 style={{marginRight: \"100px\", display: \"inline-block\", textDecoration: \"none\"}}>\n                  <Link to=\"/login\" style={{textDecoration: \"none\"}}>Sign In</Link>\n                </h3> \n                <h3 style={{marginRight: \"100px\", display: \"inline-block\"}}>\n                  <Link to=\"/register\">Register</Link>\n                </h3> \n              </div>\n            </AppBar>\n          </ThemeProvider>\n      </div>\n    ); \n  }\n}","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppBar, Typography } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport HomeAppBar from '../components/HomeAppBar'\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiAppBar: {\n      colorPrimary: {\n        backgroundColor: '#FFA474',\n      },\n    },\n  },\n  palette: {\n    primary: {\n      main: \"#ffa474\",\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n\nexport default class Home extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <HomeAppBar/>\n        </header>\n      </div>\n    ); \n  }\n}","import React, { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { TextField, Button } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport HomeAppBar from '../components/HomeAppBar'\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiAppBar: {\n      colorPrimary: {\n        backgroundColor: '#FFA474',\n      },\n    },\n    MuiTextField: {\n      colorPrimary: {\n        backgroundColor: '#FFA474',\n      },\n    },\n  },\n  palette: {\n    primary: {\n      main: \"#ffa474\",\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // State\n    this.state = {\n      emailValue: \"\",\n      pwdValue: \"\"\n    };\n\n    // Refs\n    this.email = React.createRef();\n    this.pwd = React.createRef();\n  }\n\n  loginUser() {\n    fetch('/api/userbase/verify_user', {\n      method: 'post',\n      headers: {\n        'Content-Type':  'application/json',\n      }, \n      body: JSON.stringify(this.state)\n    })\n    .then(response => response.json())\n    .then(data => {\n      sessionStorage.setItem(\"access_token\", data.access_token)\n      sessionStorage.setItem(\"uid\", data.uid)\n      window.location = \"/dashboard\";\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <HomeAppBar></HomeAppBar>\n        </header>\n        <div>\n          <ThemeProvider theme={theme}>\n              <TextField label=\"Email\" color=\"primary\" variant=\"outlined\" onChange={(e) => this.setState({emailValue: e.target.value})}/>\n              <br></br>\n              <TextField label=\"Password\" color=\"primary\" variant=\"outlined\" onChange={(e) => this.setState({pwdValue: e.target.value})}/>\n              <Button onClick={() => this.loginUser()}>Go</Button>\n          </ThemeProvider>\n        </div>\n      </div>\n    ); \n  }\n}","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TextField, Button, Radio, RadioGroup, FormControl, FormControlLabel, FormLabel } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport HomeAppBar from '../components/HomeAppBar'\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiAppBar: {\n      colorPrimary: {\n        backgroundColor: '#FFA474',\n      },\n    },\n    MuiTextField: {\n      colorPrimary: {\n        backgroundColor: '#FFA474',\n      },\n    },\n  },\n  palette: {\n    primary: {\n      main: \"#ffa474\",\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n\nexport default class Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // State\n    this.state = {\n      emailValue: \"\",\n      usernameValue: \"\",\n      pwdValue: \"\",\n      pwdConfirmValue: \"\",\n      accountType: \"\"\n    };\n\n    // Refs\n    this.email = React.createRef();\n    this.pwd = React.createRef();\n    this.pwdConfirm = React.createRef();\n  }\n\n  testConnectionToLocalServer() {\n    return fetch(\"https://sddmajordev:5000/test\")\n    .then(response => response.json())\n    .then(data => {\n      console.log('Success:', data);\n    })\n    .catch((err) => {\n        console.log(err);\n    });\n  }\n\n  // useEffect(() => {\n  //   testConnectionToLocalServer();\n  // }, []);\n  registerUser() {\n    fetch('/api/userbase/create_user', {\n      method: 'post',\n      headers: {\n        'Content-Type':  'application/json',\n      }, \n      body: JSON.stringify(this.state)\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log('Success:', data);\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <HomeAppBar></HomeAppBar>\n          </header>\n          <div>\n            <ThemeProvider theme={theme}>\n                  <TextField value={this.state.emailValue} label=\"Email\" color=\"primary\" variant=\"outlined\" \n                  onChange={(e) => this.setState({emailValue: e.target.value})}/>\n                  <br></br>\n                  <TextField label=\"Username\" color=\"primary\" variant=\"outlined\" \n                  onChange={(e) => this.setState({usernameValue: e.target.value})}/>\n                  <br></br>\n                  <TextField label=\"Password\" color=\"primary\" variant=\"outlined\"\n                  onChange={(e) => this.setState({pwdValue: e.target.value})}/>\n                  <br></br>\n                  <TextField label=\"Confirm Password\" color=\"primary\" variant=\"outlined\"\n                  onChange={(e) => this.setState({pwdConfirmValue: e.target.value})}/>\n                  <br></br>\n                  <br></br>\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">I am a</FormLabel>\n                    <RadioGroup aria-label=\"gender\" name=\"gender1\" style={{display: \"inline\"}} value={this.state.accountType}\n                    onChange={(e) => this.setState({accountType: e.target.value})}>\n                      <FormControlLabel value=\"student\" control={<Radio />} label=\"Student\" />\n                      <FormControlLabel value=\"teacher\" control={<Radio />} label=\"Teacher\" />\n                    </RadioGroup>\n                  </FormControl>\n                  <br></br>\n                  <Button onClick={() => this.registerUser()}>Go</Button>\n              </ThemeProvider>  \n          </div>\n        </div>\n      </div>\n    ); \n  }\n}","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Input, Tooltip, Button, IconButton, TextField, Dialog, Zoom, DialogTitle, Paper } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\nimport CreateIcon from '@material-ui/icons/Create';\nimport shortid from 'shortid'\n\nexport default class Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userDetails: {\n                username: \"\",\n                email: \"\"\n            },\n            existingWordlists: {},\n            openCreateWordlist: false,\n            wordlistName: \"\",\n            wordlistDescription: \"\"\n        }\n\n        this.createWordlist = this.createWordlist.bind(this);\n        this.getWordlists = this.getWordlists.bind(this);\n    }\n\n    // Adding user details pre render\n    componentWillMount() {\n        let uid = sessionStorage.getItem(\"uid\");\n        fetch('http://sddmajordev:5000/api/userbase/get_user_by_uid', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify({\"uid\": uid})\n          })\n          .then(response => response.json())\n          .then(data => {\n              this.setState({userDetails: data})\n        })\n        this.getWordlists();\n    }\n\n    getWordlists() {\n        let uid = sessionStorage.getItem(\"uid\");\n        console.log(uid)\n        fetch('http://sddmajordev:5000/api/wordlist/get_all_wordlists', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify({\"uid\": uid})\n          })\n          .then(response => response.json())\n          .then(data => {\n              console.log(data)\n              this.setState({\n                  existingWordlists: data.wordlists\n              })\n        })\n    }\n\n    // Create Wordlist\n    createWordlist() {\n        console.log(this.state)\n        let uid = sessionStorage.getItem(\"uid\");\n        let wordlistCode = shortid.generate()\n        let wordlistData = {\n            wordlistName: this.state.wordlistName,\n            wordlistDescription: this.state.wordlistDescription,\n            wordlistCode: wordlistCode,\n            uid: uid\n        }\n\n        fetch('http://sddmajordev:5000/api/wordlist/create_wordlist', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify(wordlistData)\n          })\n          .then(response => response.json())\n          .then(data => {\n              window.location = `/edit/${wordlistCode}`\n        }) \n    }\n\n    render() {\n        var items = [\n            {\n                name: \"Random Name #1\",\n                description: \"Probably the most random thing you have ever seen!\"\n            },\n            {\n                name: \"Random Name #2\",\n                description: \"Hello World!\"\n            }\n        ]\n\n        if (this.state.accountType === \"student\") {\n            // Return Student Dashboard\n        } else {\n            // Return Teacher Dashboard\n            return (\n                <div style={{overflow: \"hidden\"}}>\n                    <Tooltip title=\"Add Student\" TransitionComponent={Zoom} arrow>\n                        <IconButton aria-label=\"delete\" style={{backgroundColor: \"#FF7979\", float: \"right\"}}>\n                            <AddIcon style={{color: \"white\"}}/>\n                        </IconButton> \n                    </Tooltip>\n                    <Tooltip title=\"Create New Wordlist\" TransitionComponent={Zoom} arrow>\n                        <IconButton aria-label=\"delete\" style={{backgroundColor: \"#FF7979\", float: \"right\"}} onClick={() => this.setState({openCreateWordlist: true})}>\n                            <CreateIcon style={{color: \"white\"}}/>\n                        </IconButton> \n                    </Tooltip>\n                    <h1 style={{textAlign: \"center\"}}>Hello, {this.state.userDetails.username}</h1>\n                    <br></br>\n                    <div>\n                        <Paper style={{width: \"950px\", height: \"100%\", margin: \"0\", float: \"right\"}} elevation={3}>\n                            <div style={{margin: \"3%\"}}>\n                                <h1>Your Wordlists</h1>\n                                <TextField label=\"Search Wordlist\" variant=\"outlined\" size=\"small\"></TextField>\n                                <Paper style={{width: \"800px\", minHeight: \"100vh\", marginTop: \"1%\"}} elevation={5}>\n                                {\n                                    Object.keys(this.state.existingWordlists).map((wordlistCode) => {\n                                        let wordlistData = this.state.existingWordlists[wordlistCode]\n                                        return (\n                                            <div>\n                                                <Link to={`/edit/${wordlistCode}`}>{wordlistData.wordlist_name}</Link>\n                                                <br></br>\n                                            </div>\n                                        )\n                                    })\n                                }\n                                </Paper>\n                            </div>\n                        </Paper>\n                    </div>\n                    <Dialog open={this.state.openCreateWordlist}>\n                        <DialogTitle>New Wordlist</DialogTitle>\n                        <div style={{marginLeft: \"5%\"}}>\n                            <Paper elevation={0} style={{height: \"150px\", width: \"500px\"}}>\n                                <Input placeholder=\"Wordlist Name\" onChange={(e) => this.setState({wordlistName: e.target.value})}></Input>\n                                <br></br>\n                                <TextField label=\"Description\" style={{marginTop: \"20px\", width: \"200px\"}} onChange={(e) => this.setState({wordlistDescription: e.target.value})}></TextField>\n                                <br></br>\n                                <div style={{textAlign: \"center\"}}>\n                                    <Button color=\"primary\" variant=\"filled\" onClick={this.createWordlist}>Go</Button>\n                                </div>\n                            </Paper>\n                        </div>\n                    </Dialog>\n                </div>\n            )\n        }\n    }\n}","export default __webpack_public_path__ + \"static/media/theboard.c9406667.png\";","import React, { useEffect } from 'react'\nimport { Paper, Button, Card, CardContent, IconButton, TextField, Dialog, DialogTitle, Input } from '@material-ui/core'\nimport image from '../public/theboard.png'\nimport AddIcon from '@material-ui/icons/Add';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Carousel from 'react-material-ui-carousel'\nimport { useParams } from 'react-router';\n\nexport default class WordlistCreator extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userDetails: {\n                username: \"\",\n                email: \"\"\n            },\n            wordlistCode: \"\",\n            openWord: false,\n            wordToAdd: \"\",\n            definitionToAdd: \"\",\n            wordTranslationToAdd: \"\",\n            definitionTranslationToAdd: \"\",\n            words: [],\n            selectedWord: \"none\"\n        }\n    }\n\n    // Adding user details pre render\n    componentWillMount() {\n        let uid = sessionStorage.getItem(\"uid\");\n        // this.setState({\n        //     wordlistCode: wordlistCode\n        // })\n\n        let wordlistCode = this.props.match.params.id;\n        this.setState({\n            wordlistCode: wordlistCode\n        }, () => {\n            // Gets the current words to display in a wordlist\n            this.getWords()\n        })\n\n        fetch('http://sddmajordev:5000/api/userbase/get_user_by_uid', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify({\"uid\": uid})\n          })\n          .then(response => response.json())\n          .then(data => {\n              this.setState({userDetails: data})\n        })\n    }\n\n    // Calls the addWord API Endpoint and then adds a given word\n    // to the current wordlist\n    addWord() {\n        let uid = sessionStorage.getItem(\"uid\");\n\n        let wordData = {\n            \"uid\": uid,\n            \"wordToAdd\": this.state.wordToAdd,\n            \"definitionToAdd\": this.state.definitionToAdd,\n            \"wordTranslationToAdd\": this.state.wordTranslationToAdd,\n            \"definitionTranslationToAdd\": this.state.definitionTranslationToAdd,\n            \"wordlistCode\": this.state.wordlistCode\n        }\n\n        fetch('/api/wordlist/add_word', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify(wordData)\n          })\n          .then(response => response.json())\n          .then(data => {\n            this.setState({\n                openWord: false\n            }, () => {\n                this.getWords();\n            })\n        })\n    }\n\n    getWords() {\n        let uid = sessionStorage.getItem(\"uid\");\n\n        let wordData = {\n            \"uid\": uid,\n            \"wordlistCode\": this.state.wordlistCode\n        }\n\n        fetch('/api/wordlist/get_words', {\n            method: 'post',\n            headers: {\n                'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify(wordData)\n            })\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    words: data[\"words\"]\n                })\n        }) \n    }\n\n    render() {\n        var items = [\n            {\n                name: \"Random Name #1\",\n                description: \"Probably the most random thing you have ever seen!\"\n            },\n            {\n                name: \"Random Name #2\",\n                description: \"Hello World!\"\n            }\n        ]\n\n        if (this.state.accountType === \"student\") {\n            // Return Student Dashboard\n        } else {\n            // Return Teacher Dashboard\n            return (\n                <div>\n                    <h1 style={{paddingLeft: \"2%\"}}>10 IST</h1>\n                    <div style={{marginLeft: \"2%\"}}>\n                        <div style={{display: \"inline-block\", marginRight: \"40%\"}}>\n                            <Paper elevation={3} style={{width: \"400px\", height: \"500px\", borderRadius: \"10px\", position: \"absolute\"}}>\n                                <div style={{display: \"inline-block\", width: \"100%\"}}>\n                                    <div style={{position: \"absolute\", paddingLeft: \"5%\", paddingTop: \"5%\",}}>\n                                        <h2 style={{textAlign: \"left\"}}>Your Words</h2>\n                                        <h3 style={{textAlign: \"left\", color: \"grey\", fontWeight: \"400\"}}>Jou woorde</h3>\n                                    </div>\n                                    <div style={{paddingRight: \"5%\", paddingTop: \"12%\"}}>\n                                        <IconButton aria-label=\"delete\" style={{backgroundColor: \"#FF7979\", float: \"right\"}} onClick={() => this.setState({openWord: true})}>\n                                            <AddIcon style={{color: \"white\"}}/>\n                                        </IconButton> \n                                    </div>\n                                </div>\n                                <div style={{textAlign: \"center\", paddingTop: \"10%\"}}>\n                                    {\n                                        this.state.words.map((word) => {\n                                            return (\n                                                <Button style={{width: \"100%\", borderRadius: \"0\"}}>{word.word}</Button> \n                                            )\n                                        })\n                                    }\n                                </div>\n                            </Paper>\n                        </div>\n                        <div style={{display: \"inline-block\"}}>\n                            <Paper elevation={3} style={{width: \"700px\", height: \"500px\", borderRadius: \"10px\", position: \"absolute\"}}>\n                                <h2 style={{paddingLeft: \"5%\", paddingTop: \"5%\", textAlign: \"left\"}}>Vectors</h2>\n                                <h3 style={{paddingLeft: \"5%\", textAlign: \"left\", color: \"grey\", fontWeight: \"400\"}}>Vektore</h3>\n                                <div style={{textAlign: \"center\"}}>\n                                    <img src={image} style={{position: \"relative\", maxWidth: \"300px\"}}></img>\n                                </div>\n                                <br></br>\n                                <p style={{paddingLeft: \"5%\", paddingTop: \"1%\", textAlign: \"left\"}}>Lopsem ipsum</p>\n                            </Paper>\n                        </div>\n                    </div>\n                    <Dialog fullScreen open={this.state.openWord} onClose={() => this.setState({openWord: false})}>\n                        <DialogTitle>Add Word</DialogTitle>\n                        <div style={{marginLeft: \"5%\"}}>\n                            <Paper elevation={0} style={{textAlign: \"center\"}}>\n                                <TextField label=\"Word in English\" variant=\"outlined\" style={{marginTop: \"20px\", width: \"80%\"}} onChange={(e) => this.setState({wordToAdd: e.target.value})}></TextField>\n                                <br></br>\n                                <TextField label=\"Definition in English\" variant=\"outlined\" style={{marginTop: \"20px\", width: \"80%\"}} onChange={(e) => this.setState({definitionToAdd: e.target.value})}></TextField>\n                                <br></br>\n                                <TextField label=\"Word in Alternate Language\" variant=\"outlined\" style={{marginTop: \"20px\", width: \"80%\"}} onChange={(e) => this.setState({wordTranslationToAdd: e.target.value})}></TextField>\n                                <br></br>\n                                <TextField label=\"Definition in Alternate Language\" variant=\"outlined\" style={{marginTop: \"20px\", width: \"80%\"}} onChange={(e) => this.setState({definitionTranslationToAdd: e.target.value})}></TextField>\n                                <br></br>\n                                <Button variant=\"contained\" component=\"label\">\n                                    Upload Image\n                                    <input type=\"file\" hidden/>\n                                </Button>\n                                <br></br>\n                                <div style={{textAlign: \"center\"}}>\n                                    <Button color=\"primary\" variant=\"filled\" onClick={() => this.addWord()}>Add Word</Button>\n                                </div>\n                            </Paper>\n                        </div>\n                    </Dialog>\n                </div>\n            )\n        }\n    }\n}","import './App.css';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Dashboard from './pages/Dashboard';\nimport WordlistCreator from './pages/WordlistCreator';\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\">\n        <Home/>\n      </Route>\n      <Route path=\"/login\">\n        <Login/>\n      </Route>\n      <Route path=\"/register\">\n        <Register/>\n      </Route>\n      <Route path=\"/dashboard\">\n        <Dashboard />\n      </Route>\n      <Route path=\"/edit/:id\" component={WordlistCreator}>\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}