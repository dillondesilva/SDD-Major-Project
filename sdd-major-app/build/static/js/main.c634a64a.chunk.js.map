{"version":3,"sources":["components/HomeAppBar.js","pages/Home.js","pages/Login.js","pages/Register.js","pages/Dashboard.js","pages/WordlistCreator.js","public/theboard.png","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","overrides","MuiAppBar","colorPrimary","backgroundColor","palette","primary","main","secondary","green","React","Component","Home","className","ThemeProvider","AppBar","color","style","display","marginRight","textDecoration","to","MuiTextField","Login","props","state","emailValue","pwdValue","email","createRef","pwd","fetch","method","headers","body","JSON","stringify","this","then","response","json","data","sessionStorage","setItem","access_token","uid","window","location","marginTop","TextField","label","variant","onChange","e","setState","target","value","Button","onClick","loginUser","Register","usernameValue","pwdConfirmValue","accountType","pwdConfirm","alert","catch","err","console","log","FormControl","component","FormLabel","RadioGroup","aria-label","name","FormControlLabel","control","Radio","registerUser","Dashboard","userDetails","username","existingWordlists","openCreateWordlist","wordlistName","wordlistDescription","createWordlist","bind","getWordlists","getItem","wordlists","wordlistCode","shortid","generate","wordlistData","overflow","Tooltip","title","TransitionComponent","Zoom","arrow","IconButton","float","textAlign","Paper","width","height","margin","elevation","size","minHeight","Object","keys","map","wordlist_name","Dialog","open","DialogTitle","marginLeft","Input","placeholder","WordlistCreator","openWord","wordToAdd","definitionToAdd","wordTranslationToAdd","imageToAdd","definitionTranslationToAdd","words","selectedWord","match","params","id","getWords","reader","FileReader","addEventListener","result","wordData","eventData","file","files","readAsDataURL","selectedWordIndex","selectedWordData","borderRadius","position","top","left","paddingLeft","paddingTop","word","fontWeight","translated_word","src","img","maxWidth","maxHeight","definition","translated_definition","paddingRight","index","wordIndex","changeSelectedWord","renderWordCard","fullScreen","onClose","type","fileToBlob","hidden","addWord","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c634a64a.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppBar, Typography } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiAppBar: {\n      colorPrimary: {\n        backgroundColor: '#FFA474',\n      },\n    },\n  },\n  palette: {\n    primary: {\n      main: \"#ffa474\",\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n\nexport default class HomeAppBar extends React.Component {\n  render() {\n    return (\n      <div>\n          <ThemeProvider theme={theme}>\n            <AppBar color='primary' theme={theme}>\n              <div style={{display: \"inline-block\"}}>\n                <h3 style={{marginRight: \"100px\", display: \"inline-block\", textDecoration: \"none\"}}>\n                  <Link to=\"/login\" style={{textDecoration: \"none\"}}>Sign In</Link>\n                </h3> \n                <h3 style={{marginRight: \"100px\", display: \"inline-block\"}}>\n                  <Link to=\"/register\">Register</Link>\n                </h3> \n              </div>\n            </AppBar>\n          </ThemeProvider>\n      </div>\n    ); \n  }\n}","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppBar, Typography } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport HomeAppBar from '../components/HomeAppBar'\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiAppBar: {\n      colorPrimary: {\n        backgroundColor: '#FFA474',\n      },\n    },\n  },\n  palette: {\n    primary: {\n      main: \"#ffa474\",\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n\nexport default class Home extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <ThemeProvider theme={theme}>\n            <AppBar color='primary' theme={theme}>\n              <div style={{display: \"inline-block\"}}>\n                <h3 style={{marginRight: \"100px\", display: \"inline-block\", textDecoration: \"none\"}}>\n                  <Link to=\"/login\" style={{textDecoration: \"none\"}}>Sign In</Link>\n                </h3> \n                <h3 style={{marginRight: \"100px\", display: \"inline-block\"}}>\n                  <Link to=\"/register\">Register</Link>\n                </h3> \n              </div>\n            </AppBar>\n        </ThemeProvider> \n      </div>\n    ); \n  }\n}","import React, { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { AppBar, TextField, Button } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport HomeAppBar from '../components/HomeAppBar'\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiAppBar: {\n      colorPrimary: {\n        backgroundColor: '#FFA474',\n      },\n    },\n    MuiTextField: {\n      colorPrimary: {\n        backgroundColor: '#FFA474',\n      },\n    },\n  },\n  palette: {\n    primary: {\n      main: \"#ffa474\",\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // State\n    this.state = {\n      emailValue: \"\",\n      pwdValue: \"\"\n    };\n\n    // Refs\n    this.email = React.createRef();\n    this.pwd = React.createRef();\n  }\n\n  loginUser() {\n    fetch('/api/userbase/verify_user', {\n      method: 'post',\n      headers: {\n        'Content-Type':  'application/json',\n      }, \n      body: JSON.stringify(this.state)\n    })\n    .then(response => response.json())\n    .then(data => {\n      sessionStorage.setItem(\"access_token\", data.access_token)\n      sessionStorage.setItem(\"uid\", data.uid)\n      window.location = \"/dashboard\";\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ThemeProvider theme={theme}>\n            <AppBar color='primary' theme={theme}>\n              <div style={{display: \"inline-block\"}}>\n                <h3 style={{marginRight: \"100px\", display: \"inline-block\", textDecoration: \"none\"}}>\n                  <Link to=\"/login\" style={{textDecoration: \"none\"}}>Sign In</Link>\n                </h3> \n                <h3 style={{marginRight: \"100px\", display: \"inline-block\"}}>\n                  <Link to=\"/register\">Register</Link>\n                </h3> \n              </div>\n            </AppBar>\n        </ThemeProvider>\n        <div style={{marginTop: \"10%\"}}>\n          <ThemeProvider theme={theme}>\n              <TextField label=\"Email\" color=\"primary\" variant=\"outlined\" onChange={(e) => this.setState({emailValue: e.target.value})}/>\n              <br></br>\n              <TextField label=\"Password\" color=\"primary\" variant=\"outlined\" onChange={(e) => this.setState({pwdValue: e.target.value})}/>\n              <Button onClick={() => this.loginUser()}>Go</Button>\n          </ThemeProvider>\n        </div>\n      </div>\n    ); \n  }\n}","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppBar, TextField, Button, Radio, RadioGroup, FormControl, FormControlLabel, FormLabel } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport HomeAppBar from '../components/HomeAppBar'\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiAppBar: {\n      colorPrimary: {\n        backgroundColor: '#FFA474',\n      },\n    },\n    MuiTextField: {\n      colorPrimary: {\n        backgroundColor: '#FFA474',\n      },\n    },\n  },\n  palette: {\n    primary: {\n      main: \"#ffa474\",\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n\nexport default class Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // State\n    this.state = {\n      emailValue: \"\",\n      usernameValue: \"\",\n      pwdValue: \"\",\n      pwdConfirmValue: \"\",\n      accountType: \"\"\n    };\n\n    // Refs\n    this.email = React.createRef();\n    this.pwd = React.createRef();\n    this.pwdConfirm = React.createRef();\n  }\n\n  testConnectionToLocalServer() {\n    return fetch(\"https://sddmajordev:5000/test\")\n    .then(response => response.json())\n    .then(data => {\n\n      alert(\"Registration successful. Please proceed to login page\");\n    })\n    .catch((err) => {\n        console.log(err);\n    });\n  }\n\n  registerUser() {\n    fetch('/api/userbase/create_user', {\n      method: 'post',\n      headers: {\n        'Content-Type':  'application/json',\n      }, \n      body: JSON.stringify(this.state)\n    })\n    .then(response => response.json())\n    .then(data => {\n      alert(\"Account created! Proceeding to sign in page :)\")\n      window.location = \"/login\"\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"App\">\n          <ThemeProvider theme={theme}>\n            <AppBar color='primary' theme={theme}>\n              <div style={{display: \"inline-block\"}}>\n                <h3 style={{marginRight: \"100px\", display: \"inline-block\", textDecoration: \"none\"}}>\n                  <Link to=\"/login\" style={{textDecoration: \"none\"}}>Sign In</Link>\n                </h3> \n                <h3 style={{marginRight: \"100px\", display: \"inline-block\"}}>\n                  <Link to=\"/register\">Register</Link>\n                </h3> \n              </div>\n            </AppBar>\n          </ThemeProvider> \n          <div style={{marginTop: \"10%\"}}>\n            <ThemeProvider theme={theme}>\n                  <TextField value={this.state.emailValue} label=\"Email\" color=\"primary\" variant=\"outlined\" \n                  onChange={(e) => this.setState({emailValue: e.target.value})}/>\n                  <br></br>\n                  <TextField label=\"Username\" color=\"primary\" variant=\"outlined\" \n                  onChange={(e) => this.setState({usernameValue: e.target.value})}/>\n                  <br></br>\n                  <TextField label=\"Password\" color=\"primary\" variant=\"outlined\"\n                  onChange={(e) => this.setState({pwdValue: e.target.value})}/>\n                  <br></br>\n                  <TextField label=\"Confirm Password\" color=\"primary\" variant=\"outlined\"\n                  onChange={(e) => this.setState({pwdConfirmValue: e.target.value})}/>\n                  <br></br>\n                  <br></br>\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">I am a</FormLabel>\n                    <RadioGroup aria-label=\"gender\" name=\"gender1\" style={{display: \"inline\"}} value={this.state.accountType}\n                    onChange={(e) => this.setState({accountType: e.target.value})}>\n                      <FormControlLabel value=\"student\" control={<Radio />} label=\"Student\" />\n                      <FormControlLabel value=\"teacher\" control={<Radio />} label=\"Teacher\" />\n                    </RadioGroup>\n                  </FormControl>\n                  <br></br>\n                  <Button onClick={() => this.registerUser()}>Go</Button>\n              </ThemeProvider>  \n          </div>\n        </div>\n      </div>\n    ); \n  }\n}","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Input, Tooltip, Button, IconButton, TextField, Dialog, Zoom, DialogTitle, Paper } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\nimport CreateIcon from '@material-ui/icons/Create';\nimport shortid from 'shortid'\n\nexport default class Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userDetails: {\n                username: \"\",\n                email: \"\"\n            },\n            existingWordlists: {},\n            openCreateWordlist: false,\n            wordlistName: \"\",\n            wordlistDescription: \"\"\n        }\n\n        this.createWordlist = this.createWordlist.bind(this);\n        this.getWordlists = this.getWordlists.bind(this);\n    }\n\n    // Adding user details pre render\n    componentWillMount() {\n        let uid = sessionStorage.getItem(\"uid\");\n        fetch('api/userbase/get_user_by_uid', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify({\"uid\": uid})\n          })\n          .then(response => response.json())\n          .then(data => {\n              this.setState({userDetails: data})\n        })\n        this.getWordlists();\n    }\n\n    getWordlists() {\n        let uid = sessionStorage.getItem(\"uid\");\n        console.log(uid)\n        fetch('api/wordlist/get_all_wordlists', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify({\"uid\": uid})\n          })\n          .then(response => response.json())\n          .then(data => {\n              console.log(data)\n              this.setState({\n                  existingWordlists: data.wordlists\n              })\n        })\n    }\n\n    // Create Wordlist\n    createWordlist() {\n        console.log(this.state)\n        let uid = sessionStorage.getItem(\"uid\");\n        let wordlistCode = shortid.generate()\n        let wordlistData = {\n            wordlistName: this.state.wordlistName,\n            wordlistDescription: this.state.wordlistDescription,\n            wordlistCode: wordlistCode,\n            uid: uid\n        }\n\n        fetch('api/wordlist/create_wordlist', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify(wordlistData)\n          })\n          .then(response => response.json())\n          .then(data => {\n              window.location = `/edit/${wordlistCode}`\n        }) \n    }\n\n    render() {\n        var items = [\n            {\n                name: \"Random Name #1\",\n                description: \"Probably the most random thing you have ever seen!\"\n            },\n            {\n                name: \"Random Name #2\",\n                description: \"Hello World!\"\n            }\n        ]\n\n        if (this.state.accountType === \"student\") {\n            // Return Student Dashboard\n        } else {\n            // Return Teacher Dashboard\n            return (\n                <div style={{overflow: \"hidden\"}}>\n                    <Tooltip title=\"Add Student\" TransitionComponent={Zoom} arrow>\n                        <IconButton aria-label=\"delete\" style={{backgroundColor: \"#FF7979\", float: \"right\"}}>\n                            <AddIcon style={{color: \"white\"}}/>\n                        </IconButton> \n                    </Tooltip>\n                    <Tooltip title=\"Create New Wordlist\" TransitionComponent={Zoom} arrow>\n                        <IconButton aria-label=\"delete\" style={{backgroundColor: \"#FF7979\", float: \"right\"}} onClick={() => this.setState({openCreateWordlist: true})}>\n                            <CreateIcon style={{color: \"white\"}}/>\n                        </IconButton> \n                    </Tooltip>\n                    <h1 style={{textAlign: \"center\"}}>Hello, {this.state.userDetails.username}</h1>\n                    <br></br>\n                    <div>\n                        <Paper style={{width: \"950px\", height: \"100%\", margin: \"0\", float: \"right\"}} elevation={3}>\n                            <div style={{margin: \"3%\"}}>\n                                <h1>Your Wordlists</h1>\n                                <TextField label=\"Search Wordlist\" variant=\"outlined\" size=\"small\"></TextField>\n                                <Paper style={{width: \"800px\", minHeight: \"100vh\", marginTop: \"1%\"}} elevation={5}>\n                                {\n                                    Object.keys(this.state.existingWordlists).map((wordlistCode) => {\n                                        let wordlistData = this.state.existingWordlists[wordlistCode]\n                                        return (\n                                            <div>\n                                                <Link to={`/edit/${wordlistCode}`}>{wordlistData.wordlist_name}</Link>\n                                                <br></br>\n                                            </div>\n                                        )\n                                    })\n                                }\n                                </Paper>\n                            </div>\n                        </Paper>\n                    </div>\n                    <Dialog open={this.state.openCreateWordlist}>\n                        <DialogTitle>New Wordlist</DialogTitle>\n                        <div style={{marginLeft: \"5%\"}}>\n                            <Paper elevation={0} style={{height: \"150px\", width: \"500px\"}}>\n                                <Input placeholder=\"Wordlist Name\" onChange={(e) => this.setState({wordlistName: e.target.value})}></Input>\n                                <br></br>\n                                <TextField label=\"Description\" style={{marginTop: \"20px\", width: \"200px\"}} onChange={(e) => this.setState({wordlistDescription: e.target.value})}></TextField>\n                                <br></br>\n                                <div style={{textAlign: \"center\"}}>\n                                    <Button color=\"primary\" variant=\"filled\" onClick={this.createWordlist}>Go</Button>\n                                </div>\n                            </Paper>\n                        </div>\n                    </Dialog>\n                </div>\n            )\n        }\n    }\n}","import React, { useEffect } from 'react'\nimport { Paper, Button, Card, CardContent, IconButton, TextField, Dialog, DialogTitle, Input } from '@material-ui/core'\nimport image from '../public/theboard.png'\nimport AddIcon from '@material-ui/icons/Add';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Carousel from 'react-material-ui-carousel'\nimport { useParams } from 'react-router';\n\nexport default class WordlistCreator extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userDetails: {\n                username: \"\",\n                email: \"\"\n            },\n            wordlistCode: \"\",\n            openWord: false,\n            wordToAdd: \"\",\n            definitionToAdd: \"\",\n            wordTranslationToAdd: \"\",\n            imageToAdd: \"\",\n            definitionTranslationToAdd: \"\",\n            words: [],\n            selectedWord: \"none\"\n        }\n    }\n\n    // Adding user details pre render\n    componentWillMount() {\n        let uid = sessionStorage.getItem(\"uid\");\n        // this.setState({\n        //     wordlistCode: wordlistCode\n        // })\n\n        let wordlistCode = this.props.match.params.id;\n        this.setState({\n            wordlistCode: wordlistCode\n        }, () => {\n            // Gets the current words to display in a wordlist\n            this.getWords()\n        })\n\n        fetch('api/userbase/get_user_by_uid', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify({\"uid\": uid})\n          })\n          .then(response => response.json())\n          .then(data => {\n              this.setState({userDetails: data})\n        })\n    }\n\n    // Calls the addWord API Endpoint and then adds a given word\n    // to the current wordlist\n    addWord() {\n        let uid = sessionStorage.getItem(\"uid\");\n\n        // Instantiating a new file reader to convert \n        // user selected image to blob\n        const reader = new FileReader();\n        reader.addEventListener(\"load\", () => {\n            console.log(reader.result)\n        })\n\n        let wordData = {\n            \"uid\": uid,\n            \"wordToAdd\": this.state.wordToAdd,\n            \"definitionToAdd\": this.state.definitionToAdd,\n            \"wordTranslationToAdd\": this.state.wordTranslationToAdd,\n            \"definitionTranslationToAdd\": this.state.definitionTranslationToAdd,\n            \"wordlistCode\": this.state.wordlistCode,\n            \"imageToAdd\": this.state.imageToAdd\n        }\n\n        fetch('/api/wordlist/add_word', {\n            method: 'post',\n            headers: {\n              'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify(wordData)\n          })\n          .then(response => response.json())\n          .then(data => {\n            this.setState({\n                openWord: false\n            }, () => {\n                this.getWords();\n            })\n        })\n    }\n\n    fileToBlob(eventData) {\n        const reader = new FileReader();\n        const file = eventData.target.files[0];\n\n        reader.addEventListener(\"load\", () => {\n            // convert image file to base64 string\n            this.setState({\n                imageToAdd: reader.result\n            })\n        }, false);\n\n        if (file) {\n            reader.readAsDataURL(file);\n        }\n    }\n\n    getWords() {\n        let uid = sessionStorage.getItem(\"uid\");\n\n        let wordData = {\n            \"uid\": uid,\n            \"wordlistCode\": this.state.wordlistCode\n        }\n\n        fetch('/api/wordlist/get_words', {\n            method: 'post',\n            headers: {\n                'Content-Type':  'application/json',\n            }, \n            body: JSON.stringify(wordData)\n            })\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    words: data[\"words\"]\n                })\n        }) \n    }\n\n    // Changes the selected word in the side panel\n    changeSelectedWord(selectedWordIndex) {\n        let selectedWordData = this.state.words[selectedWordIndex]\n        this.setState({\n            selectedWord: selectedWordData\n        }, () => {\n            console.log(this.state.selectedWord)\n        })\n    }\n\n    renderWordCard() {\n        // Return an empty card indicating to select a word if no\n        // word has been selected\n        if (this.state.selectedWord === \"none\") {\n            return (\n                <Paper elevation={3} style={{width: \"700px\", height: \"500px\", borderRadius: \"10px\", position: \"absolute\", display: \"relative\"}}>\n                    <div style={{position: \"absolute\", top: \"65%\", left: \"50%\", width: \"300px\", height: \"300px\", marginTop: \"-150px\", marginLeft: \"-150px\"}}>\n                        <h1 style={{textAlign: \"center\"}}>No Word Selected</h1>\n                        <p style={{textAlign: \"center\"}}>Please select a word to view from the panel to the left</p>\n                    </div>\n                </Paper>  \n            )\n        } else {\n            return (\n                <Paper elevation={3} style={{width: \"700px\", height: \"500px\", borderRadius: \"10px\", position: \"absolute\"}}>\n                    <h2 style={{paddingLeft: \"5%\", paddingTop: \"5%\", textAlign: \"left\"}}>{this.state.selectedWord.word}</h2>\n                    <h3 style={{paddingLeft: \"5%\", textAlign: \"left\", color: \"grey\", fontWeight: \"400\"}}>{this.state.selectedWord.translated_word}</h3>\n                    <div style={{textAlign: \"center\"}}>\n                        <img src={this.state.selectedWord.img} style={{position: \"relative\", maxWidth: \"300px\", maxHeight: \"200px\"}}></img>\n                    </div>\n                    <br></br>\n                    <p style={{paddingLeft: \"5%\", paddingTop: \"1%\", textAlign: \"left\"}}>{this.state.selectedWord.definition}</p>\n                    <p style={{paddingLeft: \"5%\", paddingTop: \"1%\", textAlign: \"left\", color: \"grey\"}}>{this.state.selectedWord.translated_definition}</p>\n                </Paper>      \n            )\n        }\n    }\n\n    render() {\n        var items = [\n            {\n                name: \"Random Name #1\",\n                description: \"Probably the most random thing you have ever seen!\"\n            },\n            {\n                name: \"Random Name #2\",\n                description: \"Hello World!\"\n            }\n        ]\n\n        if (this.state.accountType === \"student\") {\n            // Return Student Dashboard\n        } else {\n            // Return Teacher Dashboard\n            return (\n                <div>\n                    <h1 style={{paddingLeft: \"2%\"}}>10 IST</h1>\n                    <div style={{marginLeft: \"2%\"}}>\n                        <div style={{display: \"inline-block\", marginRight: \"40%\"}}>\n                            <Paper elevation={3} style={{width: \"400px\", height: \"500px\", borderRadius: \"10px\", position: \"absolute\"}}>\n                                <div style={{display: \"inline-block\", width: \"100%\"}}>\n                                    <div style={{position: \"absolute\", paddingLeft: \"5%\", paddingTop: \"5%\",}}>\n                                        <h2 style={{textAlign: \"left\"}}>Your Words</h2>\n                                        <h3 style={{textAlign: \"left\", color: \"grey\", fontWeight: \"400\"}}>Jou woorde</h3>\n                                    </div>\n                                    <div style={{paddingRight: \"5%\", paddingTop: \"12%\"}}>\n                                        <IconButton aria-label=\"delete\" style={{backgroundColor: \"#FF7979\", float: \"right\"}} onClick={() => this.setState({openWord: true})}>\n                                            <AddIcon style={{color: \"white\"}}/>\n                                        </IconButton> \n                                    </div>\n                                </div>\n                                <div style={{textAlign: \"center\", paddingTop: \"10%\"}}>\n                                    {\n                                        this.state.words.map((word, index) => {\n                                            // wordIndex refers to the index of the word within this.state.words\n                                            // for selection\n                                            let wordIndex = index\n                                            return (\n                                                <Button style={{width: \"100%\", borderRadius: \"0\"}} onClick={() => this.changeSelectedWord(wordIndex)}>{word.word}</Button> \n                                            )\n                                        })\n                                    }\n                                </div>\n                            </Paper>\n                        </div>\n                        <div style={{display: \"inline-block\"}}>\n                            { this.renderWordCard() }\n                        </div>\n                    </div>\n                    <Dialog fullScreen open={this.state.openWord} onClose={() => this.setState({openWord: false})}>\n                        <DialogTitle>Add Word</DialogTitle>\n                        <div style={{marginLeft: \"5%\"}}>\n                            <Paper elevation={0} style={{textAlign: \"center\"}}>\n                                <TextField label=\"Word in English\" variant=\"outlined\" style={{marginTop: \"20px\", width: \"80%\"}} onChange={(e) => this.setState({wordToAdd: e.target.value})}></TextField>\n                                <br></br>\n                                <TextField label=\"Definition in English\" variant=\"outlined\" style={{marginTop: \"20px\", width: \"80%\"}} onChange={(e) => this.setState({definitionToAdd: e.target.value})}></TextField>\n                                <br></br>\n                                <TextField label=\"Word in Alternate Language\" variant=\"outlined\" style={{marginTop: \"20px\", width: \"80%\"}} onChange={(e) => this.setState({wordTranslationToAdd: e.target.value})}></TextField>\n                                <br></br>\n                                <TextField label=\"Definition in Alternate Language\" variant=\"outlined\" style={{marginTop: \"20px\", width: \"80%\"}} onChange={(e) => this.setState({definitionTranslationToAdd: e.target.value})}></TextField>\n                                <br></br>\n                                <Button variant=\"contained\" component=\"label\">\n                                    Upload Image\n                                    <input type=\"file\" onChange={(e) => this.fileToBlob(e)} hidden/>\n                                </Button>\n                                <br></br>\n                                <div style={{textAlign: \"center\"}}>\n                                    <Button color=\"primary\" variant=\"filled\" onClick={() => this.addWord()}>Add Word</Button>\n                                </div>\n                            </Paper>\n                        </div>\n                    </Dialog>\n                </div>\n            )\n        }\n    }\n}","export default __webpack_public_path__ + \"static/media/theboard.c9406667.png\";","import './App.css';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Dashboard from './pages/Dashboard';\nimport WordlistCreator from './pages/WordlistCreator';\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\">\n        <Home/>\n      </Route>\n      <Route path=\"/login\">\n        <Login/>\n      </Route>\n      <Route path=\"/register\">\n        <Register/>\n      </Route>\n      <Route path=\"/dashboard\">\n        <Dashboard />\n      </Route>\n      <Route path=\"/edit/:id\" component={WordlistCreator}>\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}